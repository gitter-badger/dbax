{
    "docs": [
        {
            "location": "/",
            "text": "DBAX Manual de usuario\n\n\n\nContenidos:\n\n\n\n\n\n\nBienvenido a DBAX\n\n\nIntroducci\u00f3n a DABX\n\n\nInstrucciones de instalaci\u00f3n\n\n\nTutorial Sencillo\n\n\nConsola Web DBAX\n\n\nTemas Generales\n\n\nReferencias del lenguaje\n\n\nReferencia APIs DBAX\n\n\n\n\n\n\nBienvenido a DBAX\n\n\n\n\nBienvenido\n\n\n\u00bfPorqu\u00e9 DBAX?\n\n\n\n\nIntroducci\u00f3n a DABX\n\n\n\n\nEmpezando\n\n\nDBAX a simple vista\n\n\nFunciones soportadas\n\n\nDiagrama de flujo de las aplicaciones DBAX\n\n\nModel-Vista-Controlador\n\n\nBuenas pr\u00e1cticas MVC\n\n\nObjetivos de arquitectura\n\n\n\n\nInstrucciones de instalaci\u00f3n\n\n\n\n\nDescargar DBAX\n\n\nInstrucciones de instalaci\u00f3n\n\n\n\n\nSolucionar problemas\n\n\n\n\nTutorial Sencillo\n\n\n\n\n\u00bfQu\u00e9 necesito?\n\n\nSu primera p\u00e1gina con DBAX\n\n\nAlgo \u00fatil\n\n\nTratar con formularios\n\n\nAplicaci\u00f3n b\u00e1scica de Noticias\n\n\nP\u00e1ginas est\u00e1ticas\n\n\nSecci\u00f3n noticias\n\n\nCrer una noticia\n\n\nConslusi\u00f3n\n\n\n\n\n\n\n\n\nConsola Web DBAX\n\n\n\n\nAplicaciones\n\n\nCrear una nueva aplicaci\u00f3n\n\n\nAjustes\n\n\nAjustes generales (Settings)\n\n\nPropiedades (Properties)\n\n\nEnrutado (Routing)\n\n\nVistas (Views)\n\n\nFunci\u00f3n de Validaci\u00f3n de petici\u00f3n (Request Validation Function)\n\n\nSeguridad (Security)\n\n\nRoles (Roles)\n\n\nPermisos (Permissions)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSeguridad\n\n\nUsuarios (Users)\n\n\nEsquemas de autenticaci\u00f3n (Auth Schemes)\n\n\n\n\n\n\nMonitorizaci\u00f3n\n\n\nLogs\n\n\n\n\n\n\n\n\nTemas Generales\n\n\n\n\nDBAX URLs\n\n\nControladores\n\n\nVistas\n\n\nModelos\n\n\nEnrutado URI\n\n\nGest\u00ed\u00f3n de excepciones\n\n\n\n\nSeguridad\n\n\n\n\nReferencias del lenguaje\n\n\n\n\nSintaxis b\u00e1sica\n\n\nEtiquetas de DBAX\n\n\nSalir de HTML\n\n\nSeparaci\u00f3n de instrucciones\n\n\nComentarios\n\n\n\n\n\n\nVariables\n\n\nConceptos b\u00e1sicos\n\n\nVariables Predefinidas\n\n\n\u00c1mbito de las variables\n\n\nVariables variables\n\n\nVariables desde fuentes externas\n\n\n\n\n\n\nVariables predefinidas\n\n\ndbax_core \n\n\ng$server \u2014 Informaci\u00f3n del entorno del servidor y de ejecuci\u00f3n\n\n\ng$get \u2014 Variables HTTP GET\n\n\ng$post \u2014 Variables POST de HTTP\n\n\ng$view \n\n\ng$http_header\n\n\ng$status_line\n\n\ng$controller\n\n\ng$view_name\n\n\ng$parameter \n\n\ng$path \n\n\ng$appid \n\n\ng$h_view \n\n\ng$content_type\n\n\ng$username        \n\n\ng_stop_process\n\n\n\n\n\n\ndbax_cookie\n\n\ng$req_cookies \n\n\ng$res_cookies\n\n\n\n\n\n\ndbax_exception\n\n\ng$error \n\n\n\n\n\n\ndbax_session\n\n\ng$session  \u2014 Variables de sesi\u00f3n\n\n\n\n\n\n\n\n\n\n\n\n\nReferencia APIs DBAX\n\n\n\n\nDBAX_COOKIE\n\n\nDBAX_CORE\n\n\nDBAX_DATATABLE\n\n\nDBAX_DOCUMENT\n\n\nDBAX_EXCEPTION\n\n\nDBAX_FILE_PARSER\n\n\nDBAX_LDAP\n\n\nDBAX_LOG\n\n\nDBAX_SECURITY\n\n\nDBAX_SSESSION\n\n\nDBAX_UTILS\n\n\nJSON_UTIL\n\n\nXLSX_BUILDER\n\n\n\n\nattention\n, \ncaution\n, \ndanger\n, \nerror\n, \nhint\n, \nimportant\n, \nnote\n, \ntip\n, \nwarning\n, \nadmonition\n\n\n\n\nAttention\n\n\nThis is attention\n\n\n\n\n\n\nCaution\n\n\nThis is caution\n\n\n\n\n\n\nDanger\n\n\nThis is danger\n\n\n\n\n\n\nError\n\n\nThis is error\n\n\n\n\n\n\nHint\n\n\nThis is hint\n\n\n\n\n\n\nImportant\n\n\nThis is important\n\n\n\n\n\n\nNote\n\n\nThis is note\n\n\n\n\n\n\nTip\n\n\nThis is tip\n\n\n\n\n\n\nWarning\n\n\nThis is warning\n\n\n\n\n\n\nAdmonition\n\n\nThis is admonition\n\n\n\n\nSome text with an \nABBR\n and a \nREF\n.",
            "title": "\u00cdndice"
        },
        {
            "location": "/#bienvenido-a-dbax",
            "text": "Bienvenido  \u00bfPorqu\u00e9 DBAX?",
            "title": "Bienvenido a DBAX"
        },
        {
            "location": "/#introduccion-a-dabx",
            "text": "Empezando  DBAX a simple vista  Funciones soportadas  Diagrama de flujo de las aplicaciones DBAX  Model-Vista-Controlador  Buenas pr\u00e1cticas MVC  Objetivos de arquitectura",
            "title": "Introducci\u00f3n a DABX"
        },
        {
            "location": "/#instrucciones-de-instalacion",
            "text": "Descargar DBAX  Instrucciones de instalaci\u00f3n   Solucionar problemas",
            "title": "Instrucciones de instalaci\u00f3n"
        },
        {
            "location": "/#tutorial-sencillo",
            "text": "\u00bfQu\u00e9 necesito?  Su primera p\u00e1gina con DBAX  Algo \u00fatil  Tratar con formularios  Aplicaci\u00f3n b\u00e1scica de Noticias  P\u00e1ginas est\u00e1ticas  Secci\u00f3n noticias  Crer una noticia  Conslusi\u00f3n",
            "title": "Tutorial Sencillo"
        },
        {
            "location": "/#consola-web-dbax",
            "text": "Aplicaciones  Crear una nueva aplicaci\u00f3n  Ajustes  Ajustes generales (Settings)  Propiedades (Properties)  Enrutado (Routing)  Vistas (Views)  Funci\u00f3n de Validaci\u00f3n de petici\u00f3n (Request Validation Function)  Seguridad (Security)  Roles (Roles)  Permisos (Permissions)        Seguridad  Usuarios (Users)  Esquemas de autenticaci\u00f3n (Auth Schemes)    Monitorizaci\u00f3n  Logs",
            "title": "Consola Web DBAX"
        },
        {
            "location": "/#temas-generales",
            "text": "DBAX URLs  Controladores  Vistas  Modelos  Enrutado URI  Gest\u00ed\u00f3n de excepciones   Seguridad",
            "title": "Temas Generales"
        },
        {
            "location": "/#referencias-del-lenguaje",
            "text": "Sintaxis b\u00e1sica  Etiquetas de DBAX  Salir de HTML  Separaci\u00f3n de instrucciones  Comentarios    Variables  Conceptos b\u00e1sicos  Variables Predefinidas  \u00c1mbito de las variables  Variables variables  Variables desde fuentes externas    Variables predefinidas  dbax_core   g$server \u2014 Informaci\u00f3n del entorno del servidor y de ejecuci\u00f3n  g$get \u2014 Variables HTTP GET  g$post \u2014 Variables POST de HTTP  g$view   g$http_header  g$status_line  g$controller  g$view_name  g$parameter   g$path   g$appid   g$h_view   g$content_type  g$username          g_stop_process    dbax_cookie  g$req_cookies   g$res_cookies    dbax_exception  g$error     dbax_session  g$session  \u2014 Variables de sesi\u00f3n",
            "title": "Referencias del lenguaje"
        },
        {
            "location": "/#referencia-apis-dbax",
            "text": "DBAX_COOKIE  DBAX_CORE  DBAX_DATATABLE  DBAX_DOCUMENT  DBAX_EXCEPTION  DBAX_FILE_PARSER  DBAX_LDAP  DBAX_LOG  DBAX_SECURITY  DBAX_SSESSION  DBAX_UTILS  JSON_UTIL  XLSX_BUILDER   attention ,  caution ,  danger ,  error ,  hint ,  important ,  note ,  tip ,  warning ,  admonition   Attention  This is attention    Caution  This is caution    Danger  This is danger    Error  This is error    Hint  This is hint    Important  This is important    Note  This is note    Tip  This is tip    Warning  This is warning    Admonition  This is admonition   Some text with an  ABBR  and a  REF .",
            "title": "Referencia APIs DBAX"
        },
        {
            "location": "/welcome/",
            "text": "Bienvenido a DBAX\n\n\n\nBienvenido\n\n\nDBAX es un potente framework de desarrollo de aplicaciones, un conjunto de herramientas (toolkit) para construir aplicaciones web usando SQL y PL/SQL en las bases de datos Oracle.\n\n\nSu objetivo es permitir el desarrollo de proyectos mucho m\u00e1s r\u00e1pido de lo que lo har\u00eda si estuviera escribiendo el c\u00f3digo desde cero, proporcionando un conjunto de librer\u00edas (APIs) para las tareas comunes, as\u00ed como una interfaz simple. DBAX le permite centrarse en su proyecto, reduciendo al m\u00ednimo la cantidad de c\u00f3digo necesaria para una desarrollar una tarea. \n\n\n\u00bfPara qui\u00e9n es DBAX?\n\n\nDBAX es adecuado para ti si:\n\n\n\n\nSi el n\u00facleo de su aplicaci\u00f3n reside en una base de datos Oracle.\n\n\nSi quieres tener control total sobre el c\u00f3digo de tu aplicaci\u00f3n (front-end y back-end).\n\n\nSi quieres un framework no restrictivo, abierto y flexible. \n\n\nSi necesitas crear aplicaciones web est\u00e1ndar con todas las funcionalidades de las aplicaciones web modernas (Adaptables, Ajax, AngularJS, ReactJS\n) \n\n\nEs necesario un rendimiento excepcional.\n\n\nSi quieres un framework que no obligue con a una codificaci\u00f3n restrictiva.\n\n\nSi quieres un framework preparado para un entorno empresarial.\n\n\nSi quieres un framework open source.\n\n\nSi quieres un framework seguro.\n\n\nSi quieres abstenerte de complejidad, favoreciendo soluciones simples.\n\n\nEs necesario una documentaci\u00f3n clara, exhaustiva.\n\n\nSi quieres un framework en el que te \nensucies las manos en el c\u00f3digo",
            "title": "Bienvenido a DBAX"
        },
        {
            "location": "/welcome/#bienvenido",
            "text": "DBAX es un potente framework de desarrollo de aplicaciones, un conjunto de herramientas (toolkit) para construir aplicaciones web usando SQL y PL/SQL en las bases de datos Oracle.  Su objetivo es permitir el desarrollo de proyectos mucho m\u00e1s r\u00e1pido de lo que lo har\u00eda si estuviera escribiendo el c\u00f3digo desde cero, proporcionando un conjunto de librer\u00edas (APIs) para las tareas comunes, as\u00ed como una interfaz simple. DBAX le permite centrarse en su proyecto, reduciendo al m\u00ednimo la cantidad de c\u00f3digo necesaria para una desarrollar una tarea.",
            "title": "Bienvenido"
        },
        {
            "location": "/welcome/#para-quien-es-dbax",
            "text": "DBAX es adecuado para ti si:   Si el n\u00facleo de su aplicaci\u00f3n reside en una base de datos Oracle.  Si quieres tener control total sobre el c\u00f3digo de tu aplicaci\u00f3n (front-end y back-end).  Si quieres un framework no restrictivo, abierto y flexible.   Si necesitas crear aplicaciones web est\u00e1ndar con todas las funcionalidades de las aplicaciones web modernas (Adaptables, Ajax, AngularJS, ReactJS )   Es necesario un rendimiento excepcional.  Si quieres un framework que no obligue con a una codificaci\u00f3n restrictiva.  Si quieres un framework preparado para un entorno empresarial.  Si quieres un framework open source.  Si quieres un framework seguro.  Si quieres abstenerte de complejidad, favoreciendo soluciones simples.  Es necesario una documentaci\u00f3n clara, exhaustiva.  Si quieres un framework en el que te  ensucies las manos en el c\u00f3digo",
            "title": "\u00bfPara qui\u00e9n es DBAX?"
        },
        {
            "location": "/why/",
            "text": "\u00bfPor qu\u00e9 usar DBAX?\n\n\n\n\n\n\n\n\n\nDevelopment Problem\n\n\nDBAX Solution\n\n\n\n\n\n\n\n\n\n\nJava is overkill for the projects I need to deliver.\n\n\nWe look at the \u201cbig picture\u201d of any project we work on to make sure that both technical and development deliverables are achieved with multi-faceted accountability.\n\n\n\n\n\n\nI need to lower the cost of Oracle development.\n\n\nFaster development times and rapid developer adoption means lower cost and earlier deployment.\n\n\n\n\n\n\nI need to minimise the cost of Oracle Licensing.\n\n\nDBAX is a no cost feature of all Editions of the Oracle Database and can be deployed with no cost middleware components like Tomcat and Glassfish.\n\n\n\n\n\n\nOracle Forms is no longer our strategic development tool and I need an alternative.\n\n\nDBAX should be the preferred development tool for any Oracle developer with PL/SQL experience as it allows them to develop modern Web 2.0 applications by leveraging their existing development expertise.\n\n\n\n\n\n\nI need to replace Oracle Discoverer with a modern reporting platform.\n\n\nDBAX is the perfect solution for replacing Discoverer and to enhance reporting visuals, dashboard content and output.\n\n\n\n\n\n\nHow can I develop mobile applications without ADF?\n\n\nDBAX is ready for develop mobile appliocations with tecnologi that you select.\n\n\n\n\n\n\nSpreadsheets are taking over my department and I need an alternative solution.\n\n\nDBAX is a great solution to consolidate spreadsheets, improve data quality and security, reduce duplication and administration and enhance functionality.",
            "title": "\u00bfPor qu\u00e9 DBAX?"
        },
        {
            "location": "/intro/empezando/",
            "text": "Empezando con DBAX\n\n\n\nCualquier aplicaci\u00f3n de software requiere un cierto esfuerzo para aprender. Hemos hecho todo lo posible para minimizar la curva de aprendizaje y que este proceso sea lo m\u00e1s agradable posible.\n\n\nEl primer paso es instalar DBAX, a continuaci\u00f3n, lea todos los temas en la secci\u00f3n \nIntroducci\u00f3n\n. \n\n\nA continuaci\u00f3n, lea la \nGu\u00eda de uso de la consola web de DBAX\n para comenzar a crear sus primeras aplicaciones. \n\n\nPara continuar revise los \nTemas Generales\n que le ayudar\u00e1n a entender los conceptos de MVC que introduce DBAX.\n\n\nEste manual presupone que usted conoce del lenguaje SQL y PL/SQL de Oracle. Adem\u00e1s DBAX junto a sus APIs a\u00f1ade nuevas \nReferencais del Lenguaje\n as\u00ed como un sencillo lenguaje de vistas. \n\n\nUna vez que entienda los conceptos b\u00e1sicos que estar\u00e1 listo para explorar las p\u00e1ginas de \nReferencia de las APIs\n para aprender a usarlas.",
            "title": "Empezando"
        },
        {
            "location": "/intro/a-simple-vista/",
            "text": "Empezando con DBAX\n\n\n\nDBAX es un Framework de Aplicaciones\n\n\nDBAX es un potente framework de desarrollo de aplicaciones, un conjunto de herramientas (toolkit) para construir aplicaciones web usando SQL y PL/SQL en las bases de datos Oracle.\n\n\nSu objetivo es permitir el desarrollo de proyectos mucho m\u00e1s r\u00e1pido de lo que lo har\u00eda si estuviera escribiendo el c\u00f3digo desde cero, proporcionando un conjunto de librer\u00edas (APIs) para las tareas comunes, as\u00ed como una interfaz simple. DBAX le permite centrarse en su proyecto, reduciendo al m\u00ednimo la cantidad de c\u00f3digo necesaria para una desarrollar una tarea.\n\n\nDBAX es libre\n\n\nDBAX est\u00e1 disponible bajo la licencia LGPL para que puedas usarlo como quieras. Para obtener m\u00e1s informaci\u00f3n, puede leer el \nacurdo de licencia\n.\n\n\nDBAX es ligero\n\n\nVerdaderamente ligero. El n\u00facleo del sistema requiere s\u00f3lo unas pocas librerias muy peque\u00f1as. Al contrario que con muchos frameworks que requieren muchos m\u00e1s recursos. Con PL/SQL las librerias se cargan de forma din\u00e1mica a petici\u00f3n, por lo que el sistema de base es muy delgado y bastante r\u00e1pido.\n\n\nDBAX es r\u00e1pido\n\n\nRealmente r\u00e1pido. Le retamos a encontrar un framework MVC PL/SQL que tenga mejor rendimiento que DBAX.\n\n\nDBAX usa M-V-C\n\n\nDBAX utiliza el enfoque de Modelo-Vista-Controlador, que permite una correcta  separaci\u00f3n entre la l\u00f3gica y la presentaci\u00f3n. Esto es particularmente bueno para los proyectos en los que los dise\u00f1adores est\u00e1n trabajando con los archivos de plantilla (front-end), ya que se reducir\u00e1 al m\u00ednimo el c\u00f3digo de que estos archivos contienen. MVC se describe con m\u00e1s detalle en su propia p\u00e1gina.\n\n\nDBAX Genera URLs limpias\n\n\nLas URLs generadas por DBAX son limpias y amigables para los motores de b\u00fasqueda. En lugar de utilizar el m\u00e9todo est\u00e1ndar \nquery string\n que usan los sistemas din\u00e1micos, DBAX utiliza un enfoque basado en segmentos:\n\n\nexample.com/noticias/articulo/345\n\n\n\n\n\nNote\n\n\nPor defecto, el \ndad_name\n y el \nappid\n  estan incluidos en la URL pero puede ser eliminado mediante \nmod_rewrite\n de Apache.\n\n\n\n\nDBAX Pega Fuerte\n\n\nDBAX viene con una serie completa de las librerias o paquetes que simplifican las tareas de desarrollo web m\u00e1s comunes, como el login de un usaurio, el env\u00edo de correo electr\u00f3nico, la validaci\u00f3n de los datos del formulario, el mantenimiento de sesiones, trabajar con datos XML y mucho m\u00e1s.\n\n\nDBAX es Extensible\n\n\nEl sistema se puede ampliar f\u00e1cilmente a trav\u00e9s del uso de sus propias librerias, helpers, o por medio de cualquier paquete de terceros.\n\n\nDBAX incopora un Motor de Plantillas\n\n\nUn motor de plantillas es necesario para mantener una iteraccion con las vistas HTML, por tanto DBAX incorpora un sencillo motor de plantillas con una sintaxis muy sencilla: \n\n\nul\n\n\n?dbax for c1 in (select username from all_users) loop\n        p('\nli\n'||username||'\n/li\n');'\nend loop; ?\n\n\n/ul\n\n\n\n\nDado que uno de nuestros objetivos es obtener el m\u00e1ximo rendimiento, se est\u00e1 trabajando en incluir un nuevo motor de plantillas de mayor rendimiento y con una sintaxis mas limpia. Adem\u00e1s como queremos que los desarrolladores se sientan represnetados en este framework, la sintaxis actual ser\u00e1 compatible. Incluso si ya tienes conocimiento en Oracle PSP no tendr\u00e1s que aprender ninguna sintaxis nueva ya que ser\u00e1 compatible.\n\n\nPuedes ver la evoluci\u00f3n de este nuevo proyecto en GitHub: \ntePLSQL\n\n\nDBAX est\u00e1 debidamente documentado\n\n\nA los programadores les encanta programar pero odian a escribir documentaci\u00f3n. No somos diferentes, por supuesto, pero ya que la documentaci\u00f3n es tan importante como el propio c\u00f3digo, estamos comprometidos a hacerlo. Nuestro c\u00f3digo fuente est\u00e1 extremadamente limpio y bien comentado tambi\u00e9n.",
            "title": "DBAX a simple vista"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-es-un-framework-de-aplicaciones",
            "text": "DBAX es un potente framework de desarrollo de aplicaciones, un conjunto de herramientas (toolkit) para construir aplicaciones web usando SQL y PL/SQL en las bases de datos Oracle.  Su objetivo es permitir el desarrollo de proyectos mucho m\u00e1s r\u00e1pido de lo que lo har\u00eda si estuviera escribiendo el c\u00f3digo desde cero, proporcionando un conjunto de librer\u00edas (APIs) para las tareas comunes, as\u00ed como una interfaz simple. DBAX le permite centrarse en su proyecto, reduciendo al m\u00ednimo la cantidad de c\u00f3digo necesaria para una desarrollar una tarea.",
            "title": "DBAX es un Framework de Aplicaciones"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-es-libre",
            "text": "DBAX est\u00e1 disponible bajo la licencia LGPL para que puedas usarlo como quieras. Para obtener m\u00e1s informaci\u00f3n, puede leer el  acurdo de licencia .",
            "title": "DBAX es libre"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-es-ligero",
            "text": "Verdaderamente ligero. El n\u00facleo del sistema requiere s\u00f3lo unas pocas librerias muy peque\u00f1as. Al contrario que con muchos frameworks que requieren muchos m\u00e1s recursos. Con PL/SQL las librerias se cargan de forma din\u00e1mica a petici\u00f3n, por lo que el sistema de base es muy delgado y bastante r\u00e1pido.",
            "title": "DBAX es ligero"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-es-rapido",
            "text": "Realmente r\u00e1pido. Le retamos a encontrar un framework MVC PL/SQL que tenga mejor rendimiento que DBAX.",
            "title": "DBAX es r\u00e1pido"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-usa-m-v-c",
            "text": "DBAX utiliza el enfoque de Modelo-Vista-Controlador, que permite una correcta  separaci\u00f3n entre la l\u00f3gica y la presentaci\u00f3n. Esto es particularmente bueno para los proyectos en los que los dise\u00f1adores est\u00e1n trabajando con los archivos de plantilla (front-end), ya que se reducir\u00e1 al m\u00ednimo el c\u00f3digo de que estos archivos contienen. MVC se describe con m\u00e1s detalle en su propia p\u00e1gina.",
            "title": "DBAX usa M-V-C"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-genera-urls-limpias",
            "text": "Las URLs generadas por DBAX son limpias y amigables para los motores de b\u00fasqueda. En lugar de utilizar el m\u00e9todo est\u00e1ndar  query string  que usan los sistemas din\u00e1micos, DBAX utiliza un enfoque basado en segmentos:  example.com/noticias/articulo/345   Note  Por defecto, el  dad_name  y el  appid   estan incluidos en la URL pero puede ser eliminado mediante  mod_rewrite  de Apache.",
            "title": "DBAX Genera URLs limpias"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-pega-fuerte",
            "text": "DBAX viene con una serie completa de las librerias o paquetes que simplifican las tareas de desarrollo web m\u00e1s comunes, como el login de un usaurio, el env\u00edo de correo electr\u00f3nico, la validaci\u00f3n de los datos del formulario, el mantenimiento de sesiones, trabajar con datos XML y mucho m\u00e1s.",
            "title": "DBAX Pega Fuerte"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-es-extensible",
            "text": "El sistema se puede ampliar f\u00e1cilmente a trav\u00e9s del uso de sus propias librerias, helpers, o por medio de cualquier paquete de terceros.",
            "title": "DBAX es Extensible"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-incopora-un-motor-de-plantillas",
            "text": "Un motor de plantillas es necesario para mantener una iteraccion con las vistas HTML, por tanto DBAX incorpora un sencillo motor de plantillas con una sintaxis muy sencilla:   ul  ?dbax for c1 in (select username from all_users) loop\n        p(' li '||username||' /li ');'\nend loop; ?  /ul   Dado que uno de nuestros objetivos es obtener el m\u00e1ximo rendimiento, se est\u00e1 trabajando en incluir un nuevo motor de plantillas de mayor rendimiento y con una sintaxis mas limpia. Adem\u00e1s como queremos que los desarrolladores se sientan represnetados en este framework, la sintaxis actual ser\u00e1 compatible. Incluso si ya tienes conocimiento en Oracle PSP no tendr\u00e1s que aprender ninguna sintaxis nueva ya que ser\u00e1 compatible.  Puedes ver la evoluci\u00f3n de este nuevo proyecto en GitHub:  tePLSQL",
            "title": "DBAX incopora un Motor de Plantillas"
        },
        {
            "location": "/intro/a-simple-vista/#dbax-esta-debidamente-documentado",
            "text": "A los programadores les encanta programar pero odian a escribir documentaci\u00f3n. No somos diferentes, por supuesto, pero ya que la documentaci\u00f3n es tan importante como el propio c\u00f3digo, estamos comprometidos a hacerlo. Nuestro c\u00f3digo fuente est\u00e1 extremadamente limpio y bien comentado tambi\u00e9n.",
            "title": "DBAX est\u00e1 debidamente documentado"
        },
        {
            "location": "/intro/funciones-soportadas/",
            "text": "Funciones Soportadas\n\n\n\nHe aqu\u00ed una lista de las principales caracter\u00edsticas de DBAX:\n\n\n\n\nSistema Basado en Modelo-Vista-Controlador\n\n\nPeso extremadamente ligero\n\n\nAutentificaci\u00f3n Sencilla (Usuarios locales, LDAP, Metadirectorio\u2026.)\n\n\nRBAC para Autorizaci\u00f3n (Role Based Access Control, perfilado de usuarios)\n\n\nGesti\u00f3n de estado de sesiones de usuario\n\n\nURLs amigables para los motores de b\u00fasqueda\n\n\nEnrutamiento URI flexibles\n\n\nControl de excepciones y log. Modo Info/Debug/Traza\u2026\n\n\nGenerador y procesador de documentos Excel\n\n\nAjax habilitado\n\n\nSubida y descarga de ficheros\n\n\nFormularios y validaci\u00f3n de datos\n\n\nConexion FTP\n\n\nPaginaci\u00f3n\n\n\nCifrado de datos\n\n\nMotor de plantillas\n\n\nSOAP_API\n\n\nPruebas unitarias\n\n\nGran paquete de funciones \nhelpers\n\n\nCach\u00e9 de p\u00e1ginas completas (\npendiente\n)",
            "title": "Funciones soportadas"
        },
        {
            "location": "/intro/arquitectura/",
            "text": "Arquitectura DABX\n\n\n\nEL motor de DBAX reside en una Base de Datos Oracle. Por ello, los navegadores web mediante las peticiones HTTP deben llegar de alguna forma al motor de DBAX. \n\n\nExisten varias arquitecturas que se pueden emplear para usar DBAX que deberemos elegir en funci\u00f3n de nuestras necesidades. Dependiendo el entorno en el que estemos trabajando, si se trata de desarrolloo producci\u00f3n, o si ya tenemos middleware antiguo que queramos reutilizar y no tener as\u00ed que configurar nada nuevo. \n\n\nYa que DBAX y Oracle APEX comparten la misma tecnologia las arquitecturas de ambos son similares. \n\n\nEntorno Producci\u00f3n\n\n\nEl siguiente gr\u00e1fico muestra la arquitectura de DBAX en un entorno de producci\u00f3n, haciendo uso de Oracle Rest Data Services (ORDS). \n\n\nOracle comenta lo siguiente sobre este tipo de instalaci\u00f3n:\n\n\n\n\nThe Oracle REST Data Services (ORDS) is Java based gateway, can be installed into any J2EE compliant Web Server, and is the preferred option for use with Oracle Application Express. It is a \nfree\n tool that is fully supported against Oracle WebLogic Server, Oracle Glassfish Server, and \nApache Tomcat\n. Oracle REST Data Services is part of the reference architecture used to operate the Oracle Database Cloud Service.\n\n\n\n\n\n\nEntorno Desarrollo\n\n\nPara un entorno de desarrollo, preferiblemente local, es muy util el uso de DBMS_EPG (Embedded PL/SQL Gateway).\n\n\nOracle comenta lo siguiente sobre este tipo de instalaci\u00f3n:\n\n\n\n\nThe Embedded PL/SQL Gateway (EPG) runs in the Oracle XML DB Protocal Server within the Oracle database and includes the core features of mod_plsql. Licensing for the Embedded PL/SQL Gateway is \nincluded\n with the Oracle Database license\n\n\n\n\n\n\nAprovechando su middleware antiguo\n\n\nSi en su empresa ya dispone de un Servidor web Oacle HTTP Server (OHS) o los antiguos Oracle IAS que disponene de \nmod_plsql\n puede continuar usandolos con total compatibilidad. \n\n\nOracle comenta lo siguiente sobre este tipo de instalaci\u00f3n:\n\n\n\n\nThe Oracle HTTP Server (Apache) with \nmod_plsql\n plugin can be placed on the same physical machine as the database, or on a separate physical machine.\n\nNote: If installed on the same physical machine as the database then the Oracle HTTP Server is included as part of the limited-use license included with the Oracle Database license - otherwise the Oracle HTTP Server will need to be licensed.\n\nWarning: mod_plsql is deprecated as of Oracle HTTP Server 12c (12.1.3). Oracle recommends using Oracle REST Data Services instead..\n\n\n\n\n\n\nTabla comparativa de Gateways para DABX\n\n\n\n\n\n\n\n\nCapabilities\n\n\nOracle REST Data Services\n\n\nEmbedded PL/SQL Gateway\n\n\nOracle  HTTP Server\n\n\n\n\n\n\n\n\n\n\nConfiguration options\n\n\nGUI Interface (Release \n= 2.0); Administration pages\n\n\nDatabase initialization parameters\n\n\nDatabase Access Descriptor (DAD)\n\n\n\n\n\n\nConnection Pool settings\n\n\nJDBC connection parameters\n\n\nSHARED_SERVERS; MAX_SHARED_SERVERS\n\n\nMin/MaxSpareServers; MaxClients\n\n\n\n\n\n\nEmit RESTful Web Services\n\n\nYes (Release \n= 2.0)\n\n\nNo\n\n\nNo\n\n\n\n\n\n\nSupport multi-databases\n\n\nYes, including RAC\n\n\nNo\n\n\nYes, including RAC\n\n\n\n\n\n\nEnvironment recommendations\n\n\nAll\n\n\nDevelopment only\n\n\nAll\n\n\n\n\n\n\n\n\nReferencias\n\n\nPuedes conocer m\u00e1s acerca de estos servidores en el \nsiguiente enlace",
            "title": "Arquitectura DBAX"
        },
        {
            "location": "/intro/arquitectura/#entorno-produccion",
            "text": "El siguiente gr\u00e1fico muestra la arquitectura de DBAX en un entorno de producci\u00f3n, haciendo uso de Oracle Rest Data Services (ORDS).   Oracle comenta lo siguiente sobre este tipo de instalaci\u00f3n:   The Oracle REST Data Services (ORDS) is Java based gateway, can be installed into any J2EE compliant Web Server, and is the preferred option for use with Oracle Application Express. It is a  free  tool that is fully supported against Oracle WebLogic Server, Oracle Glassfish Server, and  Apache Tomcat . Oracle REST Data Services is part of the reference architecture used to operate the Oracle Database Cloud Service.",
            "title": "Entorno Producci\u00f3n"
        },
        {
            "location": "/intro/arquitectura/#entorno-desarrollo",
            "text": "Para un entorno de desarrollo, preferiblemente local, es muy util el uso de DBMS_EPG (Embedded PL/SQL Gateway).  Oracle comenta lo siguiente sobre este tipo de instalaci\u00f3n:   The Embedded PL/SQL Gateway (EPG) runs in the Oracle XML DB Protocal Server within the Oracle database and includes the core features of mod_plsql. Licensing for the Embedded PL/SQL Gateway is  included  with the Oracle Database license",
            "title": "Entorno Desarrollo"
        },
        {
            "location": "/intro/arquitectura/#aprovechando-su-middleware-antiguo",
            "text": "Si en su empresa ya dispone de un Servidor web Oacle HTTP Server (OHS) o los antiguos Oracle IAS que disponene de  mod_plsql  puede continuar usandolos con total compatibilidad.   Oracle comenta lo siguiente sobre este tipo de instalaci\u00f3n:   The Oracle HTTP Server (Apache) with  mod_plsql  plugin can be placed on the same physical machine as the database, or on a separate physical machine. \nNote: If installed on the same physical machine as the database then the Oracle HTTP Server is included as part of the limited-use license included with the Oracle Database license - otherwise the Oracle HTTP Server will need to be licensed. \nWarning: mod_plsql is deprecated as of Oracle HTTP Server 12c (12.1.3). Oracle recommends using Oracle REST Data Services instead..",
            "title": "Aprovechando su middleware antiguo"
        },
        {
            "location": "/intro/arquitectura/#tabla-comparativa-de-gateways-para-dabx",
            "text": "Capabilities  Oracle REST Data Services  Embedded PL/SQL Gateway  Oracle  HTTP Server      Configuration options  GUI Interface (Release  = 2.0); Administration pages  Database initialization parameters  Database Access Descriptor (DAD)    Connection Pool settings  JDBC connection parameters  SHARED_SERVERS; MAX_SHARED_SERVERS  Min/MaxSpareServers; MaxClients    Emit RESTful Web Services  Yes (Release  = 2.0)  No  No    Support multi-databases  Yes, including RAC  No  Yes, including RAC    Environment recommendations  All  Development only  All",
            "title": "Tabla comparativa de Gateways para DABX"
        },
        {
            "location": "/intro/arquitectura/#referencias",
            "text": "Puedes conocer m\u00e1s acerca de estos servidores en el  siguiente enlace",
            "title": "Referencias"
        },
        {
            "location": "/intro/diagrama-flujo/",
            "text": "Diagrama del flujo de una aplicaci\u00f3n\n\n\n\nDiagrama de flujo\n\n\nEl siguiente gr\u00e1fico ilustra c\u00f3mo es el flujo de datos el sistema:\n\n\n\n\n1 - El servidor web elegido manda la petici\u00f3n del usuario a un procedimiento que tiene el APPID como nombre. \u00c9ste invoca a DBAX_CORE que hace de controlador frontal e inicializa de los recursos b\u00e1sicos necesarios para ejecutar DBAX.\n\n2 - El enrutador examina la petici\u00f3n HTTP para determinar qu\u00e9 se debe hacer con ella.\n\n3 - Si existe un archivo de cach\u00e9, se env\u00eda directamente al navegador, sin pasar por la ejecuci\u00f3n normal del sistema.\n\n4 - Seguridad. Antes de que se cargue el controlador de la aplicaci\u00f3n, la petici\u00f3n HTTP y todos los datos enviados por los usuarios se analizan por seguridad.\n\n5 - El controlador carga el modelo, revisa la autorizaci\u00f3n, recupera los par\u00e1metros del usuario, y todos los dem\u00e1s recursos necesarios para procesar la solicitud.\n\n6 - La vista final se prestan, entonces se env\u00eda al navegador web para ser visualizada. Si se habilita el almacenamiento en cach\u00e9, la vista se almacena en la cach\u00e9 primero, para que en las solicitudes posteriores se puede servir directamente desde la cach\u00e9.",
            "title": "Diagrama de flujo"
        },
        {
            "location": "/intro/diagrama-flujo/#diagrama-de-flujo",
            "text": "El siguiente gr\u00e1fico ilustra c\u00f3mo es el flujo de datos el sistema:   1 - El servidor web elegido manda la petici\u00f3n del usuario a un procedimiento que tiene el APPID como nombre. \u00c9ste invoca a DBAX_CORE que hace de controlador frontal e inicializa de los recursos b\u00e1sicos necesarios para ejecutar DBAX. \n2 - El enrutador examina la petici\u00f3n HTTP para determinar qu\u00e9 se debe hacer con ella. \n3 - Si existe un archivo de cach\u00e9, se env\u00eda directamente al navegador, sin pasar por la ejecuci\u00f3n normal del sistema. \n4 - Seguridad. Antes de que se cargue el controlador de la aplicaci\u00f3n, la petici\u00f3n HTTP y todos los datos enviados por los usuarios se analizan por seguridad. \n5 - El controlador carga el modelo, revisa la autorizaci\u00f3n, recupera los par\u00e1metros del usuario, y todos los dem\u00e1s recursos necesarios para procesar la solicitud. \n6 - La vista final se prestan, entonces se env\u00eda al navegador web para ser visualizada. Si se habilita el almacenamiento en cach\u00e9, la vista se almacena en la cach\u00e9 primero, para que en las solicitudes posteriores se puede servir directamente desde la cach\u00e9.",
            "title": "Diagrama de flujo"
        },
        {
            "location": "/intro/mvc/",
            "text": "Modelo-Vista-Controlador\n\n\n\nDBAX se basa en el patr\u00f3n de desarrollo del Modelo-Vista-Controlador. MVC es un enfoque de software que separa la l\u00f3gica de aplicaci\u00f3n de la presentaci\u00f3n. En la pr\u00e1ctica, permite que las vistas solo tengan c\u00f3digo de presentaci\u00f3n y que la logica de negocio se produzca en los modelos y controladores.\n\n\n\n\nEl modelo\n representa las estructuras de datos. Normalmente los precedimientos y funciones del modelo contendr\u00e1n las operaciones que le ayudan a recuperar, insertar y actualizar la informaci\u00f3n en su modelo de datos. Por lo tanto, el modelo representa la l\u00f3gica de negocio del sistema, independiente de la forma de interacci\u00f3n que tenga.\n\n\nLa vista\n es la informaci\u00f3n que se presenta a un usuario. La vista la componen todos los elementos que son presentados al usuario: p\u00e1ginas, formularios, mensajes, etc\u00e9tera. Una vista normalmente ser\u00e1 una p\u00e1gina web, pero en DBAX, una vista tambi\u00e9n puede ser un fragmento de la p\u00e1gina como un encabezado o pie de p\u00e1gina. \n\n\nEl controlador\n contiene la l\u00f3gica que coordina el resto de componentes. Indica como responder a cada acci\u00f3n del usuario, como utilizar el modelo, etc\u00e9tera. Por lo tanto, el controlador act\u00faa como un intermediario entre el Modelo, la Vista, y todos los dem\u00e1s recursos necesarios para procesar la petici\u00f3n HTTP y generar una p\u00e1gina web.\n\n\nDBAX tiene un enfoque poco restrictivo con MVC ya que ni los controladores ni los modelos son imperativos. Si no necesitas separar los elementos de c\u00f3digo, para simplificar el mantenimiento de los modelos, puede ignorar, por ejemplo, los modelos y generar la aplicaci\u00f3n solo con el uso de controladores y vistas.",
            "title": "Model-Vista-Controlador"
        },
        {
            "location": "/intro/buenas-practivas-mvc/",
            "text": "Buenas practicas MVC\n\n\n\nAunque el modelo Model-View-Controller (MVC) es conocido por casi todos los desarrolladores Web, c\u00f3mo utilizarlo correctamente en el desarrollo de aplicaciones reales todav\u00eda es desconocido por muchos de ellos. La principal idea central detr\u00e1s MVC es la reutilizaci\u00f3n del c\u00f3digo y la separaci\u00f3n de las responsabilidades. En esta secci\u00f3n, se describen algunas pautas generales sobre c\u00f3mo implementar MVC en el desarrollo de una aplicaci\u00f3n DBAX.\n\n\nPara explicar mejor estas directrices, se supone una aplicaci\u00f3n web se compone de varias sub-aplicaciones: \n\n\n\n\nfront end: es la parte de un sitio web que interactua con los usuarios finales;\n\n\nback end: es la parte que normalmente procesa la entrada desde el fron end y que contiene la funcionalidad administrativa para la gesti\u00f3n de la aplicaci\u00f3n. El acceso suele estar restringida a administradores;\n\n\nconsola web: se trata de una aplicaci\u00f3n web que ayuda a configurar y controlar la aplicaci\u00f3n;\n\n\nWeb API: interfaces con terceros para la integraci\u00f3n con la aplicaci\u00f3n.\n\n\n\n\nEl conjunto de estas sub-aplicaciones conforman un aplicaci\u00f3n DBAX. \n\n\nModelo\n\n\nLos Modelos representan la estructura de datos subyacente de una aplicaci\u00f3n web. Los modelos normalmente son reutilizados y compartidos entre las diferentes sub-aplicaciones de una aplicaci\u00f3n web. Por ejemplo, un modelo llamado Noticias puede ser utilizado por las APIs Web o por el front end o back end de la aplicaci\u00f3n, o incluso por otras aplicaciones. Por lo tanto, los modelos\n\n\n\n\ndeben contener las propiedades (variables, arrays, records) para procesar sus datos espec\u00edficos;\n\n\ndeben contener la l\u00f3gica de negocio (por ejemplo, reglas de validaci\u00f3n) para asegurar que los datos tratados cumplen los requisitos del negocio;\n\n\ncontienen el c\u00f3digo para la manipulaci\u00f3n de datos. Por ejemplo, un modelo para un formulario de busqueda SearchModel, adem\u00e1s de procesar los datos de entrada, puede contener una m\u00e9todo (procedimiento o funci\u00f3n) para ejecutar la b\u00fasqueda real.\n\n\n\n\nPor norma general, los modelos no deben contener l\u00f3gica que se comunique directamente con los usuarios finales. M\u00e1s concretamente, los modelos\n\n\n\n\nno deben usar \ndbax_core.g$get\n, \ndbax_core.g$post\n, u otras variables similares que est\u00e1n directamente vinculados a la solicitud del usuario final. Recordemos que un modelo puede ser utilizado por una sub-aplicaci\u00f3n totalmente independiente (por ejemplo, pruebas unitarias, API web) que no usan estas variables en las peticiones. Estas variables relativas a la solicitud del usuario deben ser gestionadas por el controlador.\n\n\ndeben evitar contener c\u00f3digo HTML u otro c\u00f3digo de presentaci\u00f3n. Ya que el c\u00f3digo de presentaci\u00f3n var\u00eda en funci\u00f3n de los requerimientos del usuario (por ejemplo, el front end y back end muestran el detalle de una noticia en formatos diferentes, uno en HTML y otro en XML), el c\u00f3digo de presentaci\u00f3n se incorpora en las vistas.\n\n\n\n\nVistas\n\n\nLas vistas son las responsables de presentar los modelos en el formato que los usuarios finales desean. En general las vistas\n\n\n\n\ndebe contener principalmente c\u00f3digo de presentaci\u00f3n, tales como HTML, y simple c\u00f3digo PL/SQL para procesar, formatear y representar los datos;\n\n\ndeben evitar contener c\u00f3digo que realiza consultas expl\u00edcitas en la DB. Este c\u00f3digo se coloca en los modelos.\n\n\nno deben usar \ndbax_core.g$get\n, \ndbax_core.g$post\n, u otras variables similares que est\u00e1n directamente vinculados a la solicitud del usuario. Este es el trabajo del controlador. La vista se debe centrar en la pantalla y en el dise\u00f1o de los datos facilitados por el controlador y/o modelos, pero no intentar acceder a las variables de la petici\u00f3n o al modelo de datos funcional directamente.\n\n\npuede acceder a las propiedades(variables, arrays, records\n) y m\u00e9todos (funciones o procedimientos) de los modelos directamente. Sin embargo, esto debe hacerse s\u00f3lo con el prop\u00f3sito de presentaci\u00f3n.\n\n\n\n\nLas vistas pueden ser reutilizados en diferentes formas:\n\n\n\n\nLayout y Vistas parciales: \u00e1reas de presentaci\u00f3n comunes (por ejemplo, las cabeceras de p\u00e1gina, pie de p\u00e1gina) se pueden poner en una vista Layout.\n\n\nWidgets: si se necesita una gran cantidad de l\u00f3gica para presentar una vista parcial, \u00e9sta se puede convertir en un widget para contener esta l\u00f3gica.\n\n\nHelpers (Clases de ayuda): a menudo se necesitan algunos fragmentos de c\u00f3digo para realizar tareas peque\u00f1as, como la generaci\u00f3n de etiquetas HTML. En lugar de colocar el c\u00f3digo directamente en las vistas, un mejor enfoque consiste en colocar todos estos fragmentos de c\u00f3digo en un Helper. \n\n\n\n\nControlador\n\n\nLos controladores son el pegamento que une a los modelos, las vistas y otros componentes en una aplicaci\u00f3n. Los controladores son responsables de tratar directamente con las peticiones del usuario final. Por lo tanto, los controladores:\n\n\n\n\ndeben usar \ndbax_core.g$get\n, \ndbax_core.g$post\n y otras variables que representan las solicitudes de los usuarios;\n\n\ninvocan a los modelos y gestionan su ciclo de vida. Por ejemplo, en una acci\u00f3n t\u00edpica de un modelo, una actualizaci\u00f3n, el controlador invoca al modelo pasando los par\u00e1metros que necesita que ha recogido del usuario desde \ndbax_core.g$post\n; despu\u00e9s de que el modelo realiza la actualizaci\u00f3n, el controlador puede redirigir el navegador del usuario a la p\u00e1gina de detalle del modelo. \n\n\ndeben evitar contener sentencias SQL de modificacion de datos, esto se realiza en los modelos.\n\n\ndeben evitar contener c\u00f3digo HTML o cualquier otro lenguaje de presentaci\u00f3n. Esto se realiza en las vistas.\n\n\n\n\nEn una aplicaci\u00f3n MVC bien dise\u00f1ado, los controladores son muy ligeros, contienen unas pocas docenas de l\u00edneas de c\u00f3digo; mientras que los modelos son muy pesados, ya que contiene la mayor parte del c\u00f3digo responsable de procesar y manipular los datos. Esto es porque la estructura de datos y la l\u00f3gica de negocio que contienen los modelos es espec\u00edfica para una aplicaci\u00f3n en particular, y necesitan ser personalizados para satisfacer los requisitos espec\u00edficos de la misma; mientras que la l\u00f3gica de los controladores a menudo sigue un patr\u00f3n similar en todas las aplicaciones.",
            "title": "Buenas pr\u00e1cticas MVC"
        },
        {
            "location": "/intro/buenas-practivas-mvc/#modelo",
            "text": "Los Modelos representan la estructura de datos subyacente de una aplicaci\u00f3n web. Los modelos normalmente son reutilizados y compartidos entre las diferentes sub-aplicaciones de una aplicaci\u00f3n web. Por ejemplo, un modelo llamado Noticias puede ser utilizado por las APIs Web o por el front end o back end de la aplicaci\u00f3n, o incluso por otras aplicaciones. Por lo tanto, los modelos   deben contener las propiedades (variables, arrays, records) para procesar sus datos espec\u00edficos;  deben contener la l\u00f3gica de negocio (por ejemplo, reglas de validaci\u00f3n) para asegurar que los datos tratados cumplen los requisitos del negocio;  contienen el c\u00f3digo para la manipulaci\u00f3n de datos. Por ejemplo, un modelo para un formulario de busqueda SearchModel, adem\u00e1s de procesar los datos de entrada, puede contener una m\u00e9todo (procedimiento o funci\u00f3n) para ejecutar la b\u00fasqueda real.   Por norma general, los modelos no deben contener l\u00f3gica que se comunique directamente con los usuarios finales. M\u00e1s concretamente, los modelos   no deben usar  dbax_core.g$get ,  dbax_core.g$post , u otras variables similares que est\u00e1n directamente vinculados a la solicitud del usuario final. Recordemos que un modelo puede ser utilizado por una sub-aplicaci\u00f3n totalmente independiente (por ejemplo, pruebas unitarias, API web) que no usan estas variables en las peticiones. Estas variables relativas a la solicitud del usuario deben ser gestionadas por el controlador.  deben evitar contener c\u00f3digo HTML u otro c\u00f3digo de presentaci\u00f3n. Ya que el c\u00f3digo de presentaci\u00f3n var\u00eda en funci\u00f3n de los requerimientos del usuario (por ejemplo, el front end y back end muestran el detalle de una noticia en formatos diferentes, uno en HTML y otro en XML), el c\u00f3digo de presentaci\u00f3n se incorpora en las vistas.",
            "title": "Modelo"
        },
        {
            "location": "/intro/buenas-practivas-mvc/#vistas",
            "text": "Las vistas son las responsables de presentar los modelos en el formato que los usuarios finales desean. En general las vistas   debe contener principalmente c\u00f3digo de presentaci\u00f3n, tales como HTML, y simple c\u00f3digo PL/SQL para procesar, formatear y representar los datos;  deben evitar contener c\u00f3digo que realiza consultas expl\u00edcitas en la DB. Este c\u00f3digo se coloca en los modelos.  no deben usar  dbax_core.g$get ,  dbax_core.g$post , u otras variables similares que est\u00e1n directamente vinculados a la solicitud del usuario. Este es el trabajo del controlador. La vista se debe centrar en la pantalla y en el dise\u00f1o de los datos facilitados por el controlador y/o modelos, pero no intentar acceder a las variables de la petici\u00f3n o al modelo de datos funcional directamente.  puede acceder a las propiedades(variables, arrays, records ) y m\u00e9todos (funciones o procedimientos) de los modelos directamente. Sin embargo, esto debe hacerse s\u00f3lo con el prop\u00f3sito de presentaci\u00f3n.   Las vistas pueden ser reutilizados en diferentes formas:   Layout y Vistas parciales: \u00e1reas de presentaci\u00f3n comunes (por ejemplo, las cabeceras de p\u00e1gina, pie de p\u00e1gina) se pueden poner en una vista Layout.  Widgets: si se necesita una gran cantidad de l\u00f3gica para presentar una vista parcial, \u00e9sta se puede convertir en un widget para contener esta l\u00f3gica.  Helpers (Clases de ayuda): a menudo se necesitan algunos fragmentos de c\u00f3digo para realizar tareas peque\u00f1as, como la generaci\u00f3n de etiquetas HTML. En lugar de colocar el c\u00f3digo directamente en las vistas, un mejor enfoque consiste en colocar todos estos fragmentos de c\u00f3digo en un Helper.",
            "title": "Vistas"
        },
        {
            "location": "/intro/buenas-practivas-mvc/#controlador",
            "text": "Los controladores son el pegamento que une a los modelos, las vistas y otros componentes en una aplicaci\u00f3n. Los controladores son responsables de tratar directamente con las peticiones del usuario final. Por lo tanto, los controladores:   deben usar  dbax_core.g$get ,  dbax_core.g$post  y otras variables que representan las solicitudes de los usuarios;  invocan a los modelos y gestionan su ciclo de vida. Por ejemplo, en una acci\u00f3n t\u00edpica de un modelo, una actualizaci\u00f3n, el controlador invoca al modelo pasando los par\u00e1metros que necesita que ha recogido del usuario desde  dbax_core.g$post ; despu\u00e9s de que el modelo realiza la actualizaci\u00f3n, el controlador puede redirigir el navegador del usuario a la p\u00e1gina de detalle del modelo.   deben evitar contener sentencias SQL de modificacion de datos, esto se realiza en los modelos.  deben evitar contener c\u00f3digo HTML o cualquier otro lenguaje de presentaci\u00f3n. Esto se realiza en las vistas.   En una aplicaci\u00f3n MVC bien dise\u00f1ado, los controladores son muy ligeros, contienen unas pocas docenas de l\u00edneas de c\u00f3digo; mientras que los modelos son muy pesados, ya que contiene la mayor parte del c\u00f3digo responsable de procesar y manipular los datos. Esto es porque la estructura de datos y la l\u00f3gica de negocio que contienen los modelos es espec\u00edfica para una aplicaci\u00f3n en particular, y necesitan ser personalizados para satisfacer los requisitos espec\u00edficos de la misma; mientras que la l\u00f3gica de los controladores a menudo sigue un patr\u00f3n similar en todas las aplicaciones.",
            "title": "Controlador"
        },
        {
            "location": "/intro/conceptos-aplicaciones/",
            "text": "Conceptos de las Aplicaciones DBAX\n\n\n\n\u00bfQue es una aplicaci\u00f3n DBAX?\n\n\nEl objetivo final del framework DABX es crear aplicaciones Web. Por tanto, a diferencia de otros lenguajes web o frameworks, cualquier cosa que usted desarrolle estar\u00e1 bao el paraguas de una aplicaci\u00f3n. Incluso si tan solo quiere realizar un \nhola mundo\n, \u00e9ste pertenecer\u00e1 a una aplicaci\u00f3n. \n\n\nCrear una aplicaci\u00f3n desde la consola Web de DBAX, ser\u00e1 lo primero que deba hacer en su fase de desarrollo. \n\n\nComo se distribuyen las aplicaciones en una instalaci\u00f3n de DBAX\n\n\nEn una instalaci\u00f3n de DBAX, que como hemos visto se instala en un esquema de base de datos, existe una \u00fanica consola web desde donde se crear todas las aplicaicones.\n\n\n\n\nPor tanto, dependiendo de su entorno, usted puede instalar una \u00fanica vez DBAX y utilizar esta \u00fanica instalaci\u00f3n para todos sus desarrollos, o en cambio si necesita diferenciar instalaciones, por ejemplo si tiene diferentes equipos desarrollando aplicaciones en la misma base de datos, o quiere separar el acceso a las aplicaciones por seguridad, puede realizar varias instalaciones de DBAX en la base de datos.",
            "title": "Conceptos aplicaciones"
        },
        {
            "location": "/intro/conceptos-aplicaciones/#que-es-una-aplicacion-dbax",
            "text": "El objetivo final del framework DABX es crear aplicaciones Web. Por tanto, a diferencia de otros lenguajes web o frameworks, cualquier cosa que usted desarrolle estar\u00e1 bao el paraguas de una aplicaci\u00f3n. Incluso si tan solo quiere realizar un  hola mundo , \u00e9ste pertenecer\u00e1 a una aplicaci\u00f3n.   Crear una aplicaci\u00f3n desde la consola Web de DBAX, ser\u00e1 lo primero que deba hacer en su fase de desarrollo.",
            "title": "\u00bfQue es una aplicaci\u00f3n DBAX?"
        },
        {
            "location": "/intro/conceptos-aplicaciones/#como-se-distribuyen-las-aplicaciones-en-una-instalacion-de-dbax",
            "text": "En una instalaci\u00f3n de DBAX, que como hemos visto se instala en un esquema de base de datos, existe una \u00fanica consola web desde donde se crear todas las aplicaicones.   Por tanto, dependiendo de su entorno, usted puede instalar una \u00fanica vez DBAX y utilizar esta \u00fanica instalaci\u00f3n para todos sus desarrollos, o en cambio si necesita diferenciar instalaciones, por ejemplo si tiene diferentes equipos desarrollando aplicaciones en la misma base de datos, o quiere separar el acceso a las aplicaciones por seguridad, puede realizar varias instalaciones de DBAX en la base de datos.",
            "title": "Como se distribuyen las aplicaciones en una instalaci\u00f3n de DBAX"
        },
        {
            "location": "/intro/objetivos-arquitectura/",
            "text": "Objetivos de Arquitectura\n\n\n\n\n\nWarning\n\n\nDocumento sin finalizar. No lo tenga en cuenta todav\u00eda \n\n\n\n\nEl objetivo con la arquitectura de DBAX es obtener el m\u00e1ximo rendimiento, capacidad y la flexibilidad en el paquete m\u00e1s ligero posible.\n\n\nPara cumplir con este objetivo estamos comprometidos con la evaluaci\u00f3n comparativa, re-factorizaci\u00f3n y simplificaci\u00f3n en cada paso del proceso de desarrollo, rechazando cualquier cosa que no cumpla el objetivo establecido.\n\n\nDesde un punto de vista t\u00e9cnico y arquitect\u00f3nico, DBAX ha sido creado con los siguientes objetivos:\n\n\n\n\nLa instanciaci\u00f3n din\u00e1mica. En DBAX, los componentes se cargan y ejecutan las rutinas s\u00f3lo cuando se solicita, en lugar de a nivel mundial. No se hacen suposiciones por el sistema en cuanto a lo que puede ser necesaria m\u00e1s all\u00e1 de los recursos b\u00e1sicos m\u00ednimos, por lo que el sistema es muy ligero por defecto. Los eventos, que se activa por la petici\u00f3n HTTP, y los controladores y vistas que dise\u00f1e determinar\u00e1n lo que se invoca.\n\n\nEl acoplamiento flexible. El acoplamiento es el grado en que los componentes de un sistema dependen unos de otros. Los menos componentes dependen unos de otros m\u00e1s reutilizable y flexible el sistema se vuelve. Nuestro objetivo era un sistema muy imprecisa.\n\n\nComponente Singularidad. La singularidad es el grado en que los componentes tienen un prop\u00f3sito estrechamente enfocado. En DBAX, cada clase y sus funciones son muy aut\u00f3nomos con el fin de permitir la m\u00e1xima utilidad.\n\nDBAX es un sistema din\u00e1micamente una instancia, d\u00e9bilmente acoplado con un alto componente de singularidad. Se esfuerza por simplicidad, flexibilidad y alto rendimiento en un paquete peque\u00f1o huella.",
            "title": "Objetivos de arquitectura"
        },
        {
            "location": "/install/descarga/",
            "text": "Descargando DBAX\n\n\n\n\n\nDBAX v0.1(beta)\n\n\n\n\nGitHub\n\n\nGit es un sistema de control de versiones distribuido.\n\n\nEl acceso p\u00fablico a Git est\u00e1 disponible en GitHub. Tenga en cuenta que, si bien se hace todo lo posible para mantener esta base de c\u00f3digo funcional, no podemos garantizar la estabilidad del c\u00f3digo tomado de la rama de desarrollo (master).",
            "title": "Descargar DBAX"
        },
        {
            "location": "/install/descarga/#github",
            "text": "Git es un sistema de control de versiones distribuido.  El acceso p\u00fablico a Git est\u00e1 disponible en GitHub. Tenga en cuenta que, si bien se hace todo lo posible para mantener esta base de c\u00f3digo funcional, no podemos garantizar la estabilidad del c\u00f3digo tomado de la rama de desarrollo (master).",
            "title": "GitHub"
        },
        {
            "location": "/install/install/",
            "text": "Instrucciones de Instalaci\u00f3n\n\n\n\n\n\n\n\nRecursos DBAX\n\n\nEsquema de BD para DBAX\n\n\nGateway DBAX\n\n\nEntornos de producci\u00f3n\n\n\nConfigurar ORDS para DBAX\n\n\nConfigurar OHS para DABX\n\n\n\n\n\n\nEntorno de desarollo\n\n\nConfigurar Embedded PL/SQL Gateway (DBMS_EPG)\n\n\n\n\n\n\n\n\n\n\nInstalaci\u00f3n DBAX\n\n\n\n\n\n\nRecursos DBAX\n\n\nRecordar que, independientemente de Gateway elegido, los recuersos (resources) de DBAX se deben siempre alojar en un servidor web. Estos recursos contienen JavaScript, CSS, Fuentes e im\u00e1genes principalmente y se usan para dar servicio a la Consola de DBAX y a sus plantillas. \n\n\nEn DBAX no nos ha parecido buena idea que los recursos los sirva tambi\u00e9n la BD ya que incrementa enormemente el numero de peticiones que se realiza a la misma, pero tampoco nos gusta tener que instalar demasiado software en nuestros equipos para poder empezar a desarrollar. \n\n\nPor todo ello, DBAX proporciona un sitio p\u00fablico en internet donde cualquiera puede enlazar sus recursos y no tener as\u00ed que almacenarlos internamente, si as\u00ed no se quisiera: \nresources.haciendoti.com\n\n\nEsquema de BD para DBAX\n\n\nDBAX son un conjunto de paquetes PL/SQL, librerias y una serie de tablas que deben ser creados y compilados en un esquema de la Base de datos.\n\n\nPuede instalar DBAX en cualquier esquema que lo desee, incluso podria usar el mismo esquema de BD para almacenar DABX y todas sus aplicaciones creadas con DABX, esto solo depende de como se quiera organizar la BD. \n\n\nLo recomendable es crear un esquema espec\u00edfico para alojar el motor de DBAX y aislar as\u00ed al framework de los esquemas de su negocio. \n\n\nEl siguiente script contiene la creaci\u00f3n de un nuevo esquema para DBAX: \n\n\nCREATE TABLESPACE TS_DBAX DATAFILE 'dbax.dat' size 10M autoextend on;\n\nCREATE TEMPORARY TABLESPACE TS_DBAX_TEMP tempfile 'dbax_temp.dat' size 5M autoextend on;\n\nCREATE USER dbax IDENTIFIED BY password DEFAULT TABLESPACE TS_DBAX\n   TEMPORARY TABLESPACE TS_DBAX_TEMP ACCOUNT UNLOCK  PROFILE DEFAULT;\n\n  GRANT CREATE SESSION, CREATE TABLE, CREATE PROCEDURE,\n  CREATE SEQUENCE TO dbax;\n\n  GRANT Execute on DBMS_CRYPTO to dbax;\n\n  GRANT CREATE TYPE TO dbax;\n\n  grant create public synonym, drop public synonym to dbax;\n\n\n  ALTER USER dbax QUOTA UNLIMITED ON TS_DBAX;\n\n  ALTER USER dbax account unlock;\n\n\n\n\nGateway DBAX\n\n\nLo primero ser\u00e1 seleccionar un gateway para para DBAX. En apartado de Arquitectura se explica cada uno de los gateways que se pueden elegir y sus recomendaciones de uso en funci\u00f3n del entorno (desarrollo o producci\u00f3n).\n\n\nEntornos de producci\u00f3n\n\n\nPara un entorno de producci\u00f3n se recomienda el uso de Oracle REST Data Services o de Oracle HTTP Server. \n\n\nConfigurar ORDS para DBAX\n\n\n\n\nNote\n\n\nHasta completar este manual revise la documentaci\u00f3n de Oracle para instalar este producto. \n\n\nREST Data Services Installation, Configuration, and Development Guide\n\n\n\n\nConfigurar OHS para DABX\n\n\n\n\nNote\n\n\nHasta completar este manual revise la documentaci\u00f3n de Oracle para instalar este producto. \n\n\nInstalling Oracle HTTP Server 11g\n\nTras instalar el servidor deber\u00e1 configurarlo: \n\n\nUnderstanding Oracle HTTP Server Modules - mod_plsql\n\n\n\n\nEntorno de desarollo\n\n\nPara un entorno de desarrollo no es requisito instalar ORDS por lo que puede configurar la propia Base de Datos para que actue como servidor web con el Embedded PL/SQL Gateway.\n\n\nConfigurar Embedded PL/SQL Gateway (DBMS_EPG)\n\n\nEjecutar el siguiente script con privilegios de SYS.\n\n\n\nBEGIN\n   DBMS_EPG.drop_dad ('DBAX');\nEND;\n\nBEGIN\n   DBMS_EPG.create_dad (dad_name =\n 'DBAX', PATH =\n '/dbax/*');\nEND;\n\nBEGIN\n\n   DBMS_EPG.set_dad_attribute (dad_name     =\n 'DBAX',\n                               attr_name    =\n 'default-page',\n                               attr_value   =\n 'console');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =\n 'DBAX',\n                               attr_name    =\n 'error-style',\n                               attr_value   =\n 'DebugStyle');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =\n 'DBAX',\n                               attr_name    =\n 'database-username',\n                               attr_value   =\n 'DBAX');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =\n 'DBAX',\n                               attr_name    =\n 'request-validation-function',\n                               attr_value   =\n 'dbax.dbax_core.request_validation_function');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =\n 'DBAX',\n                               attr_name    =\n 'session-state-management',\n                               attr_value   =\n 'StatelessWithFastResetPackageState');                               \n\n   DBMS_EPG.set_dad_attribute( dad_name   =\n 'DBAX',\n                               attr_name  =\n 'document-table-name',\n                               attr_value =\n 'wdx_documents' );\nEND;\n\nBEGIN\n   DBMS_EPG.authorize_dad (dad_name =\n 'DBAX', USER =\n 'DBAX');   \nEND;\n\n\n\n\n\n\n\nWarning\n\n\nEste script asume que el usaurio DBAX existe en la BD. Si usted ha creado otro usuario con diferente nombre modifique los par\u00e1metros que hacen referencia al usario DBAX.\n\n\n\n\n\n\nNote\n\n\nPara mas informaci\u00f3n dir\u00edgase a la documentaci\u00f3n de Oracle\n\n\nDBMS_EPG\n\n\n\n\nInstalaci\u00f3n DBAX\n\n\nPara instalar DBAX en la BD debemos seguir los siguientes pasos.\n\n\n    unzip master.zip\n    cd dbax/source/install\n    sqlplus \nuser/userpass\n@SID @dbax_install.sql\n\n\n\n\nUna vez todos los paquetes, librerias, procedimientos y objetos han sido compilados en la Base de datos, es necesario importar los datos de configuraci\u00f3n para que la consola de DBAX funcione.\n\n\n    cd dbax/source/install\n    imp \nuser/userpass\n@SID file=dbax.dmp data_only=y",
            "title": "Instrucciones de instalaci\u00f3n"
        },
        {
            "location": "/install/install/#recursos-dbax",
            "text": "Recordar que, independientemente de Gateway elegido, los recuersos (resources) de DBAX se deben siempre alojar en un servidor web. Estos recursos contienen JavaScript, CSS, Fuentes e im\u00e1genes principalmente y se usan para dar servicio a la Consola de DBAX y a sus plantillas.   En DBAX no nos ha parecido buena idea que los recursos los sirva tambi\u00e9n la BD ya que incrementa enormemente el numero de peticiones que se realiza a la misma, pero tampoco nos gusta tener que instalar demasiado software en nuestros equipos para poder empezar a desarrollar.   Por todo ello, DBAX proporciona un sitio p\u00fablico en internet donde cualquiera puede enlazar sus recursos y no tener as\u00ed que almacenarlos internamente, si as\u00ed no se quisiera:  resources.haciendoti.com",
            "title": "Recursos DBAX"
        },
        {
            "location": "/install/install/#esquema-de-bd-para-dbax",
            "text": "DBAX son un conjunto de paquetes PL/SQL, librerias y una serie de tablas que deben ser creados y compilados en un esquema de la Base de datos.  Puede instalar DBAX en cualquier esquema que lo desee, incluso podria usar el mismo esquema de BD para almacenar DABX y todas sus aplicaciones creadas con DABX, esto solo depende de como se quiera organizar la BD.   Lo recomendable es crear un esquema espec\u00edfico para alojar el motor de DBAX y aislar as\u00ed al framework de los esquemas de su negocio.   El siguiente script contiene la creaci\u00f3n de un nuevo esquema para DBAX:   CREATE TABLESPACE TS_DBAX DATAFILE 'dbax.dat' size 10M autoextend on;\n\nCREATE TEMPORARY TABLESPACE TS_DBAX_TEMP tempfile 'dbax_temp.dat' size 5M autoextend on;\n\nCREATE USER dbax IDENTIFIED BY password DEFAULT TABLESPACE TS_DBAX\n   TEMPORARY TABLESPACE TS_DBAX_TEMP ACCOUNT UNLOCK  PROFILE DEFAULT;\n\n  GRANT CREATE SESSION, CREATE TABLE, CREATE PROCEDURE,\n  CREATE SEQUENCE TO dbax;\n\n  GRANT Execute on DBMS_CRYPTO to dbax;\n\n  GRANT CREATE TYPE TO dbax;\n\n  grant create public synonym, drop public synonym to dbax;\n\n\n  ALTER USER dbax QUOTA UNLIMITED ON TS_DBAX;\n\n  ALTER USER dbax account unlock;",
            "title": "Esquema de BD para DBAX"
        },
        {
            "location": "/install/install/#gateway-dbax",
            "text": "Lo primero ser\u00e1 seleccionar un gateway para para DBAX. En apartado de Arquitectura se explica cada uno de los gateways que se pueden elegir y sus recomendaciones de uso en funci\u00f3n del entorno (desarrollo o producci\u00f3n).",
            "title": "Gateway DBAX"
        },
        {
            "location": "/install/install/#entornos-de-produccion",
            "text": "Para un entorno de producci\u00f3n se recomienda el uso de Oracle REST Data Services o de Oracle HTTP Server.",
            "title": "Entornos de producci\u00f3n"
        },
        {
            "location": "/install/install/#configurar-ords-para-dbax",
            "text": "Note  Hasta completar este manual revise la documentaci\u00f3n de Oracle para instalar este producto.   REST Data Services Installation, Configuration, and Development Guide",
            "title": "Configurar ORDS para DBAX"
        },
        {
            "location": "/install/install/#configurar-ohs-para-dabx",
            "text": "Note  Hasta completar este manual revise la documentaci\u00f3n de Oracle para instalar este producto.   Installing Oracle HTTP Server 11g \nTras instalar el servidor deber\u00e1 configurarlo:   Understanding Oracle HTTP Server Modules - mod_plsql",
            "title": "Configurar OHS para DABX"
        },
        {
            "location": "/install/install/#entorno-de-desarollo",
            "text": "Para un entorno de desarrollo no es requisito instalar ORDS por lo que puede configurar la propia Base de Datos para que actue como servidor web con el Embedded PL/SQL Gateway.",
            "title": "Entorno de desarollo"
        },
        {
            "location": "/install/install/#configurar-embedded-plsql-gateway-dbms_epg",
            "text": "Ejecutar el siguiente script con privilegios de SYS.  \nBEGIN\n   DBMS_EPG.drop_dad ('DBAX');\nEND;\n\nBEGIN\n   DBMS_EPG.create_dad (dad_name =  'DBAX', PATH =  '/dbax/*');\nEND;\n\nBEGIN\n\n   DBMS_EPG.set_dad_attribute (dad_name     =  'DBAX',\n                               attr_name    =  'default-page',\n                               attr_value   =  'console');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =  'DBAX',\n                               attr_name    =  'error-style',\n                               attr_value   =  'DebugStyle');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =  'DBAX',\n                               attr_name    =  'database-username',\n                               attr_value   =  'DBAX');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =  'DBAX',\n                               attr_name    =  'request-validation-function',\n                               attr_value   =  'dbax.dbax_core.request_validation_function');\n\n   DBMS_EPG.set_dad_attribute (dad_name     =  'DBAX',\n                               attr_name    =  'session-state-management',\n                               attr_value   =  'StatelessWithFastResetPackageState');                               \n\n   DBMS_EPG.set_dad_attribute( dad_name   =  'DBAX',\n                               attr_name  =  'document-table-name',\n                               attr_value =  'wdx_documents' );\nEND;\n\nBEGIN\n   DBMS_EPG.authorize_dad (dad_name =  'DBAX', USER =  'DBAX');   \nEND;   Warning  Este script asume que el usaurio DBAX existe en la BD. Si usted ha creado otro usuario con diferente nombre modifique los par\u00e1metros que hacen referencia al usario DBAX.    Note  Para mas informaci\u00f3n dir\u00edgase a la documentaci\u00f3n de Oracle  DBMS_EPG",
            "title": "Configurar Embedded PL/SQL Gateway (DBMS_EPG)"
        },
        {
            "location": "/install/install/#instalacion-dbax",
            "text": "Para instalar DBAX en la BD debemos seguir los siguientes pasos.      unzip master.zip\n    cd dbax/source/install\n    sqlplus  user/userpass @SID @dbax_install.sql  Una vez todos los paquetes, librerias, procedimientos y objetos han sido compilados en la Base de datos, es necesario importar los datos de configuraci\u00f3n para que la consola de DBAX funcione.      cd dbax/source/install\n    imp  user/userpass @SID file=dbax.dmp data_only=y",
            "title": "Instalaci\u00f3n DBAX"
        },
        {
            "location": "/tutorial/que-necesito/",
            "text": "\u00bfQu\u00e9 necesito?\n\n\n\nEn este manual se asume que usted ya tiene instalado DBAX en algun entorno descrito en el apartado de instalaci\u00f3n. \n\n\nPara desarrollar aplicaciones DBAX realmente solo necesita un navegador web,  un editor de texto y accceso SQL a su base de datos Oracle. Pero para trabajar con agilidad y soltura se recomienda que instale las siguientes herramientas: \n\n\nSQL Developer\n\n\nSe trata de la herramienta oficial y gratuita de Oracle para el desarrollo en PL/SQL y gesti\u00f3n de Bases de datos Oracle. Con ella podremos acceder a la BD para compilar y desplegar nuestros controladores y modelos. \n\n\nExisten otras herramientas muy conocidas y potentes por los desarrolladores Oracle, Toad for Oracle, por ejemplo, pero que tienen un coste de licenciamiento. \n\n\nDescarga SQL Developer\n\n\nSublime Text\n\n\nComo ellos mismos indican \n\n\n\n\nThe text editor you\nll fall in love with. \n\nSublime Text is a sophisticated text editor for code, markup and prose.\n\nYou\nll love the slick user interface, extraordinary features and amazing performance.\n\n\n\n\nSe trata de un editor de texto y editor de c\u00f3digo fuente multi lenguaje gratuito, con un rendmiento excepcional y con una base de plugins muy amplia que extiende sus funcionalidades enormemente. Estas documentaci\u00f3n est\u00e1 escrita con este editor. \n\n\nDescarga Sublime Text 3\n\n\nTutorial Aplicaci\u00f3n B\u00e1sica de Noticias\n\n\nEste tutorial tiene como objetivo  presentarle el framework DBAX y los principios b\u00e1sicos de la arquitectura MVC. Se le mostrar\u00e1 c\u00f3mo se construye una aplicaci\u00f3n b\u00e1sica DBAX paso a paso. \n\n\nEn este tutorial, va a crear una aplicaci\u00f3n de noticias b\u00e1sicas. Comenzaremos escribiendo el c\u00f3digo para cargar p\u00e1ginas est\u00e1ticas. A continuaci\u00f3n, se crear\u00e1 una secci\u00f3n de noticias que extrae las noticias desde una tabla de la base de datos. Por \u00faltimo, se le agrega un formulario para crear nuevos art\u00edculos.\n\n\nEste tutorial se centrar\u00e1 principalmente en:\n\n\n\n\nFundamentos Modelo-Vista-Controlador\n\n\nPrincipios b\u00e1sicos de enrutamiento\n\n\nValidaci\u00f3n de datos formularios\n\n\nRecuperar datos de una tabla y mostrarlos al usuario\n\n\n\n\nTodo el tutorial se divide en varias p\u00e1ginas, cada una de explicar una peque\u00f1a parte de la funcionalidad del framework de DBAX.",
            "title": "\u00bfQue necesito?"
        },
        {
            "location": "/tutorial/que-necesito/#sql-developer",
            "text": "Se trata de la herramienta oficial y gratuita de Oracle para el desarrollo en PL/SQL y gesti\u00f3n de Bases de datos Oracle. Con ella podremos acceder a la BD para compilar y desplegar nuestros controladores y modelos.   Existen otras herramientas muy conocidas y potentes por los desarrolladores Oracle, Toad for Oracle, por ejemplo, pero que tienen un coste de licenciamiento.   Descarga SQL Developer",
            "title": "SQL Developer"
        },
        {
            "location": "/tutorial/que-necesito/#sublime-text",
            "text": "Como ellos mismos indican    The text editor you ll fall in love with.  \nSublime Text is a sophisticated text editor for code, markup and prose. \nYou ll love the slick user interface, extraordinary features and amazing performance.   Se trata de un editor de texto y editor de c\u00f3digo fuente multi lenguaje gratuito, con un rendmiento excepcional y con una base de plugins muy amplia que extiende sus funcionalidades enormemente. Estas documentaci\u00f3n est\u00e1 escrita con este editor.   Descarga Sublime Text 3",
            "title": "Sublime Text"
        },
        {
            "location": "/tutorial/que-necesito/#tutorial-aplicacion-basica-de-noticias",
            "text": "Este tutorial tiene como objetivo  presentarle el framework DBAX y los principios b\u00e1sicos de la arquitectura MVC. Se le mostrar\u00e1 c\u00f3mo se construye una aplicaci\u00f3n b\u00e1sica DBAX paso a paso.   En este tutorial, va a crear una aplicaci\u00f3n de noticias b\u00e1sicas. Comenzaremos escribiendo el c\u00f3digo para cargar p\u00e1ginas est\u00e1ticas. A continuaci\u00f3n, se crear\u00e1 una secci\u00f3n de noticias que extrae las noticias desde una tabla de la base de datos. Por \u00faltimo, se le agrega un formulario para crear nuevos art\u00edculos.",
            "title": "Tutorial Aplicaci\u00f3n B\u00e1sica de Noticias"
        },
        {
            "location": "/tutorial/que-necesito/#este-tutorial-se-centrara-principalmente-en",
            "text": "Fundamentos Modelo-Vista-Controlador  Principios b\u00e1sicos de enrutamiento  Validaci\u00f3n de datos formularios  Recuperar datos de una tabla y mostrarlos al usuario   Todo el tutorial se divide en varias p\u00e1ginas, cada una de explicar una peque\u00f1a parte de la funcionalidad del framework de DBAX.",
            "title": "Este tutorial se centrar\u00e1 principalmente en:"
        },
        {
            "location": "/tutorial/primera-pagina/",
            "text": "Su primera p\u00e1gina\n\n\n\nComo se ha comentado, lo primero que debe hacer es crear una aplicaci\u00f3n desde la consola Web de DBAX. De momento y de cara a este tutorial vamos a mostrar directamente el c\u00f3digo que deberemos escribir en nuestro primero \nHola Mundo\n: \n\n\nNuestro primer hola.dbax\n\n\nhtml\n\n \nhead\n\n  \ntitle\nPrueba de DBAX\n/title\n\n \n/head\n\n \nbody\n\n \n?dbax p('\np\nHola Mundo\n/p\n'); ?\n\n \n/body\n\n\n/html\n\n\n\n\n\nDesde el navegador prodremos acceder a la vista que hemos creado desde una URL similar a la siguiente: \n/dbax/hola/mundo\n \n\n\nDonde: \n\n- \n/dbax\n es el nombre que le hemos asignado al Database Access Descriptor en la instalaci\u00f3n del Gateway.\n\n- \n/hola\n es el nombre de la aplicaci\u00f3n que hemos creado para este ejemplo.\n\n- \n/mundo\n es el nombre de la vista que acabamos de crear. \n\n\nSi todo est\u00e1 configurado correctamente, la vista ser\u00e1 analizado por el interprete de vistas de DBAX y se enviar\u00e1 el siguiente contenido a su navegador:\n\n\nhtml\n\n \nhead\n\n  \ntitle\nPrueba de PHP\n/title\n\n \n/head\n\n \nbody\n\n \np\nHola mundo\n/p\n\n \n/body\n\n\n/html\n\n\n\n\n\nEste ejemplo es extremadamente simple y realmente no es necesario utilizar la sintaxis de DBAX para crear una p\u00e1gina como esta. Lo \u00fanico que muestra es: \nHola mundo\n empleando la sentencia \np\n de DABX. \n\n\nEl objetivo de este ejemplo es mostrar el formato de las etiquetas especiales de DBAX. En este ejemplo utilizamos \n?dbax\n para indicar el inicio de una etiqueta de DBAX. Despu\u00e9s ponemos la sentencia y abandonamos el modo DBAX a\u00f1adiendo la etiqueta de cierre \n?\n. De esta manera, se puede entrar y salir del modo DBAX en un fichero HTML cada vez que se quiera.\n\n\nEntre las etiquetas \n?dbax\n y \n?\n debemos incluir nuestras sentencias PL/SQL. DBAX no incluye un nuevo lenguaje de programaci\u00f3no, sino que utiliza PL/SQL como lenguaje de programaci\u00f3n. Por tanto entre las etiquetas \n?dbax\n y \n?\n el codigo introducido ser\u00e1 ejecutado como un bloque an\u00f3nimo de PL/SQL. \n\n\nPor lo tanto esta instrucci\u00f3n: \n\n\n?dbax p('\np\nHola Mundo\n/p\n'); ?\n\n\nSer\u00e1 traducida en el siguiente c\u00f3digo PL/SQL: \n\n\nDECLARE\nBEGIN\n    p('\np\nHola Mundo\n/p\n');\nEND;\n\n\n\n\nLa instrucci\u00f3n \nP\n es el alias creado en DBAX sobre la instrucci\u00f3n \nHTP.P\n que se trata de un procedimiento que imprime el string pasado por par\u00e1metro al buffer de salida HTTP . El objetivo de este alias es acortar la sintaxis para disminuir el c\u00f3digo que debemos escribir.",
            "title": "Su primera p\u00e1gina"
        },
        {
            "location": "/tutorial/primera-pagina/#nuestro-primer-holadbax",
            "text": "html \n  head \n   title Prueba de DBAX /title \n  /head \n  body \n  ?dbax p(' p Hola Mundo /p '); ? \n  /body  /html   Desde el navegador prodremos acceder a la vista que hemos creado desde una URL similar a la siguiente:  /dbax/hola/mundo    Donde:  \n-  /dbax  es el nombre que le hemos asignado al Database Access Descriptor en la instalaci\u00f3n del Gateway. \n-  /hola  es el nombre de la aplicaci\u00f3n que hemos creado para este ejemplo. \n-  /mundo  es el nombre de la vista que acabamos de crear.   Si todo est\u00e1 configurado correctamente, la vista ser\u00e1 analizado por el interprete de vistas de DBAX y se enviar\u00e1 el siguiente contenido a su navegador:  html \n  head \n   title Prueba de PHP /title \n  /head \n  body \n  p Hola mundo /p \n  /body  /html   Este ejemplo es extremadamente simple y realmente no es necesario utilizar la sintaxis de DBAX para crear una p\u00e1gina como esta. Lo \u00fanico que muestra es:  Hola mundo  empleando la sentencia  p  de DABX.   El objetivo de este ejemplo es mostrar el formato de las etiquetas especiales de DBAX. En este ejemplo utilizamos  ?dbax  para indicar el inicio de una etiqueta de DBAX. Despu\u00e9s ponemos la sentencia y abandonamos el modo DBAX a\u00f1adiendo la etiqueta de cierre  ? . De esta manera, se puede entrar y salir del modo DBAX en un fichero HTML cada vez que se quiera.  Entre las etiquetas  ?dbax  y  ?  debemos incluir nuestras sentencias PL/SQL. DBAX no incluye un nuevo lenguaje de programaci\u00f3no, sino que utiliza PL/SQL como lenguaje de programaci\u00f3n. Por tanto entre las etiquetas  ?dbax  y  ?  el codigo introducido ser\u00e1 ejecutado como un bloque an\u00f3nimo de PL/SQL.   Por lo tanto esta instrucci\u00f3n:   ?dbax p(' p Hola Mundo /p '); ?  Ser\u00e1 traducida en el siguiente c\u00f3digo PL/SQL:   DECLARE\nBEGIN\n    p(' p Hola Mundo /p ');\nEND;  La instrucci\u00f3n  P  es el alias creado en DBAX sobre la instrucci\u00f3n  HTP.P  que se trata de un procedimiento que imprime el string pasado por par\u00e1metro al buffer de salida HTTP . El objetivo de este alias es acortar la sintaxis para disminuir el c\u00f3digo que debemos escribir.",
            "title": "Nuestro primer hola.dbax"
        },
        {
            "location": "/tutorial/util/",
            "text": "Algo \u00fatil\n\n\n\nHagamos ahora algo que puede ser m\u00e1s \u00fatil. Vamos a comprobar qu\u00e9 tipo de navegador est\u00e1 utilizando el usuario visitante. Para hacerlo, vamos a comprobar el string del agente de usuario que el navegador env\u00eda como parte de la petici\u00f3n HTTP. Esta informaci\u00f3n es almacenada en una variable. En DBAX, las variables siempre comienzan por \ng$\n y est\u00e1n contenidas en alg\u00fan paquete de referencia. La variable que nos interesa ahora es \ndbax_core.g$server('HTTP_USER_AGENT')\n.\n\n\n\n\nNote\n\n\ndbax_core.g$server\n es una variable especial reservada por DBAX que contiene toda la informaci\u00f3n del servidor web. Es conocida como una variable Superglobal. Consulte la p\u00e1gina del manual sobre \nvariable predefinidas\n para m\u00e1s informaci\u00f3n.\n\n\n\n\nEjemplo Imprimir una variable (elemento de array)\n\n\n?dbax p(dbax_core.g$server('HTTP_USER_AGENT')); ?\n\n\n\n\nUn jemplo del resultado de este script podr\u00eda ser:\n\n\nMozilla/5.0 (Windows NT 6.3; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0\n\n\n\nHay muchos tipos de variables en DBAX. En el ejemplo anterior se muestra un elemento de un Array. Los arrays pueden ser muy \u00fatiles.\n\n\ndbax_core.g$server\n es simplemente una variable que se encuentra disponible autom\u00e1ticamente en DBAX. Se puede encontrar una lista en la secci\u00f3n Variables reservadas del manual.\n\n\nPuede usar m\u00faltiples sentencias dentro de una etiqueta de DBAX y crear peque\u00f1os bloques de c\u00f3digo que realicen m\u00e1s que un simple \nP\n. Por ejemplo, si se quisiera detectar el uso de Internet Explorer, se podr\u00eda hacer algo as\u00ed:\n\n\nEjemplo usando estructuras de control y funciones\n\n\n?dbax\n  if instr(dbax_core.g$server('HTTP_USER_AGENT'), 'MSIE') \n 0 \n      OR instr(dbax_core.g$server('HTTP_USER_AGENT'), 'WOW64') \n 0\n  then\n      p( 'Est\u00e1 usando Internet Explorer.\nbr /\n');\n  else\n      p( 'Est\u00e1 usando un navegador diferente a Internet Explorer.\nbr /\n');\n  end if;\n?\n\n\n\n\n\nUn ejemplo del resultado de este script ser\u00eda:\n\n\nEst\u00e1 usando Internet Explorer.\nbr /\n\n\n\n\nAqu\u00ed hemos introducido un par de conceptos nuevos. Tenemos una sentencia \nif\n. Si est\u00e1 familiarizado con la sintaxis b\u00e1sica del lenguaje PL/SQL, deber\u00eda parecerle l\u00f3gico. De lo contrario, probablemente deber\u00eda conseguir un libro que le introduzca a PL/SQL, y leer el primer par de cap\u00edtulos. \n\n\nEl segundo concepto que introducimos fue la funci\u00f3n llamada a \ninstr()\n. \ninstr()\n es una funci\u00f3n integrada en PL/SQL que busca un string dentro de otro. En este caso estamos buscando \nMSIE\n o \nWOW64\n (llamado aguja) dentro de \ndbax_core.g$serever('HTTP_USER_AGENT')\n (tambi\u00e9n llamado pajar). Si el string se encuentra dentro del pajar, la funci\u00f3n devuelve la posici\u00f3n de la aguja relativa al inicio del pajar. De lo contrario, devuelve 0.",
            "title": "Algo util"
        },
        {
            "location": "/tutorial/util/#ejemplo-imprimir-una-variable-elemento-de-array",
            "text": "?dbax p(dbax_core.g$server('HTTP_USER_AGENT')); ?   Un jemplo del resultado de este script podr\u00eda ser:  Mozilla/5.0 (Windows NT 6.3; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0  Hay muchos tipos de variables en DBAX. En el ejemplo anterior se muestra un elemento de un Array. Los arrays pueden ser muy \u00fatiles.  dbax_core.g$server  es simplemente una variable que se encuentra disponible autom\u00e1ticamente en DBAX. Se puede encontrar una lista en la secci\u00f3n Variables reservadas del manual.  Puede usar m\u00faltiples sentencias dentro de una etiqueta de DBAX y crear peque\u00f1os bloques de c\u00f3digo que realicen m\u00e1s que un simple  P . Por ejemplo, si se quisiera detectar el uso de Internet Explorer, se podr\u00eda hacer algo as\u00ed:",
            "title": "Ejemplo Imprimir una variable (elemento de array)"
        },
        {
            "location": "/tutorial/util/#ejemplo-usando-estructuras-de-control-y-funciones",
            "text": "?dbax\n  if instr(dbax_core.g$server('HTTP_USER_AGENT'), 'MSIE')   0 \n      OR instr(dbax_core.g$server('HTTP_USER_AGENT'), 'WOW64')   0\n  then\n      p( 'Est\u00e1 usando Internet Explorer. br / ');\n  else\n      p( 'Est\u00e1 usando un navegador diferente a Internet Explorer. br / ');\n  end if;\n?   Un ejemplo del resultado de este script ser\u00eda:  Est\u00e1 usando Internet Explorer. br /   Aqu\u00ed hemos introducido un par de conceptos nuevos. Tenemos una sentencia  if . Si est\u00e1 familiarizado con la sintaxis b\u00e1sica del lenguaje PL/SQL, deber\u00eda parecerle l\u00f3gico. De lo contrario, probablemente deber\u00eda conseguir un libro que le introduzca a PL/SQL, y leer el primer par de cap\u00edtulos.   El segundo concepto que introducimos fue la funci\u00f3n llamada a  instr() .  instr()  es una funci\u00f3n integrada en PL/SQL que busca un string dentro de otro. En este caso estamos buscando  MSIE  o  WOW64  (llamado aguja) dentro de  dbax_core.g$serever('HTTP_USER_AGENT')  (tambi\u00e9n llamado pajar). Si el string se encuentra dentro del pajar, la funci\u00f3n devuelve la posici\u00f3n de la aguja relativa al inicio del pajar. De lo contrario, devuelve 0.",
            "title": "Ejemplo usando estructuras de control y funciones"
        },
        {
            "location": "/tutorial/formularios/",
            "text": "Trabajar con Formularios\n\n\n\nOtra de las caracter\u00edsticas m\u00e1s potentes de DBAX es la forma de gestionar formularios HTML. El concepto b\u00e1sico que es importante entender es que cualquier elemento de un formulario estar\u00e1 disponible autom\u00e1ticamente en sus scripts de DBAX.\n\n\nEjemplo Un formulario HTML sencillo\n\n\nform action=\n${base_path}/mundo\n method=\npost\n\n \np\nSu nombre: \ninput type=\ntext\n name=\nnombre\n /\n/p\n\n \np\nSu edad: \ninput type=\ntext\n name=\nedad\n /\n/p\n\n \np\ninput type=\nsubmit\n /\n/p\n\n\n/form\n\n\n\n\n\nTan solo tenemos algo especial en este formulario que es la variable \n${base_path}\n, se trata de una varibale de sustituci\u00f3n sobre c\u00f3digo HTML que se define a nivel de propiedad en la aplicaci\u00f3n y que referencia a la url base de la aplicaci\u00f3n. En el apartado de Ajustes -\n Propiedades podr\u00e1 encontrar m\u00e1s informaci\u00f3n al respecto.\n\n\nPor lo dem\u00e1s, este c\u00f3digo es solamente un formulario HTML sin ninguna clase de etiqueta especial. Cuando el usuario rellena este formulario y oprime el bot\u00f3n de env\u00edo, se llama a la p\u00e1gina \n${base_path}/mundo\n. En esta URL se podr\u00eda escribir algo as\u00ed:\n\n\nEjemplo Mostrar informaci\u00f3n de nuestro formulario\n\n\nHola \n?dbax p(dbax_core.g$post('nombre')); ?\n.\nUsted tiene \n?dbax p(to_number(dbax_core.g$post('edad'))); ?\n a\u00f1os.\n\n\n\nUn ejemplo del resultado de este script podr\u00eda ser:\n\n\nHola Jos\u00e9. Usted tiene 22 a\u00f1os.\n\n\n\nDeber\u00eda ser obvio qu\u00e9 es lo que hace el c\u00f3digo. El campo edad, ya que sabemos que es un n\u00famero, podemos convertirlo a un valor de tipo \nNUMBER\n. Las variables \ndbax_core.g$post('nombre'))\n y \ndbax_core.g$post('edad'))\n son establecidas autom\u00e1ticamente por DBAX. Anteriormente hemos usado la superglobal \ndbax_core.g$server\n ahora hemos usado la superglobal \ndbax_core.g$post\n, la cual contiene todos los datos de POST. Observe que el m\u00e9todo de nuestro formulario es POST. \n\n\nMejorando el c\u00f3digo\n\n\nSi ha intentado ejecutar este c\u00f3digo, ver\u00e1 que si accedemos a las variables \ndbax_core.g$post('nombre')\n y \ndbax_core.g$post('edad'))\n sin que tengan datos, DBAX nos imprimir\u00e1 por pantalla el siguiente error: \n\n\nDBAX Inline Runtime Error \n\nSQLERRM\n\nORA-01403: no data found\nORA-01403: no data found\n\nBefore this sentence [BEGIN htp.prn(''); /*Your code star...] (1) \n\nSQL Statement \n\nBEGIN htp.prn('\n!-- DBAX interpreter --\n'); /*Your code starts here*/ p(dbax_core.g$post('nombre')); END;\nError BackTrace \n\nORA-06512: at line 1\nORA-06512: at \nDBAX.DBAX_CORE\n, line 922\n\n\n\n\nLo que nos indica que la variable \ndbax_core.g$post('nombre')\n no tiene contenido. Para solcionar esto sin tener que rescribir demasiado nuestro c\u00f3digo, haremos uso de la libreria \ndbax_utis\n el procedimiento \nget\n.\n\n\n   Hola \n?dbax p(dbax_utils.get(dbax_core.g$post,'nombre')); ?\n.\n   Usted tiene \n?dbax p(to_number(dbax_utils.get(dbax_core.g$post,'edad'))); ?\n a\u00f1os.\n\n\n\ndbax_utils.get\n recibe como primer par\u00e1metro un array y como segundo par\u00e1metro el elemento que queremos recuperar del array. Si el elemento no se ecuentra devuelve NULL. De esta forma, no nos dar\u00e1 error si los valores no existen.",
            "title": "Formularios"
        },
        {
            "location": "/tutorial/formularios/#ejemplo-un-formulario-html-sencillo",
            "text": "form action= ${base_path}/mundo  method= post \n  p Su nombre:  input type= text  name= nombre  / /p \n  p Su edad:  input type= text  name= edad  / /p \n  p input type= submit  / /p  /form   Tan solo tenemos algo especial en este formulario que es la variable  ${base_path} , se trata de una varibale de sustituci\u00f3n sobre c\u00f3digo HTML que se define a nivel de propiedad en la aplicaci\u00f3n y que referencia a la url base de la aplicaci\u00f3n. En el apartado de Ajustes -  Propiedades podr\u00e1 encontrar m\u00e1s informaci\u00f3n al respecto.  Por lo dem\u00e1s, este c\u00f3digo es solamente un formulario HTML sin ninguna clase de etiqueta especial. Cuando el usuario rellena este formulario y oprime el bot\u00f3n de env\u00edo, se llama a la p\u00e1gina  ${base_path}/mundo . En esta URL se podr\u00eda escribir algo as\u00ed:",
            "title": "Ejemplo Un formulario HTML sencillo"
        },
        {
            "location": "/tutorial/formularios/#ejemplo-mostrar-informacion-de-nuestro-formulario",
            "text": "Hola  ?dbax p(dbax_core.g$post('nombre')); ? .\nUsted tiene  ?dbax p(to_number(dbax_core.g$post('edad'))); ?  a\u00f1os.  Un ejemplo del resultado de este script podr\u00eda ser:  Hola Jos\u00e9. Usted tiene 22 a\u00f1os.  Deber\u00eda ser obvio qu\u00e9 es lo que hace el c\u00f3digo. El campo edad, ya que sabemos que es un n\u00famero, podemos convertirlo a un valor de tipo  NUMBER . Las variables  dbax_core.g$post('nombre'))  y  dbax_core.g$post('edad'))  son establecidas autom\u00e1ticamente por DBAX. Anteriormente hemos usado la superglobal  dbax_core.g$server  ahora hemos usado la superglobal  dbax_core.g$post , la cual contiene todos los datos de POST. Observe que el m\u00e9todo de nuestro formulario es POST.",
            "title": "Ejemplo Mostrar informaci\u00f3n de nuestro formulario"
        },
        {
            "location": "/tutorial/formularios/#mejorando-el-codigo",
            "text": "Si ha intentado ejecutar este c\u00f3digo, ver\u00e1 que si accedemos a las variables  dbax_core.g$post('nombre')  y  dbax_core.g$post('edad'))  sin que tengan datos, DBAX nos imprimir\u00e1 por pantalla el siguiente error:   DBAX Inline Runtime Error \n\nSQLERRM\n\nORA-01403: no data found\nORA-01403: no data found\n\nBefore this sentence [BEGIN htp.prn(''); /*Your code star...] (1) \n\nSQL Statement \n\nBEGIN htp.prn(' !-- DBAX interpreter -- '); /*Your code starts here*/ p(dbax_core.g$post('nombre')); END;\nError BackTrace \n\nORA-06512: at line 1\nORA-06512: at  DBAX.DBAX_CORE , line 922  Lo que nos indica que la variable  dbax_core.g$post('nombre')  no tiene contenido. Para solcionar esto sin tener que rescribir demasiado nuestro c\u00f3digo, haremos uso de la libreria  dbax_utis  el procedimiento  get .     Hola  ?dbax p(dbax_utils.get(dbax_core.g$post,'nombre')); ? .\n   Usted tiene  ?dbax p(to_number(dbax_utils.get(dbax_core.g$post,'edad'))); ?  a\u00f1os.  dbax_utils.get  recibe como primer par\u00e1metro un array y como segundo par\u00e1metro el elemento que queremos recuperar del array. Si el elemento no se ecuentra devuelve NULL. De esta forma, no nos dar\u00e1 error si los valores no existen.",
            "title": "Mejorando el c\u00f3digo"
        },
        {
            "location": "/tutorial/app/paginas-estaticas/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "P\u00e1ginas est\u00e1ticas"
        },
        {
            "location": "/tutorial/app/noticias/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Secci\u00f3n noticias"
        },
        {
            "location": "/tutorial/app/crear-noticia/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Crear noticia"
        },
        {
            "location": "/tutorial/app/conclusion/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Conclusi\u00f3n"
        },
        {
            "location": "/console/apps/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Aplicaciones"
        },
        {
            "location": "/console/nueva-app/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Crear aplicaci\u00f3n"
        },
        {
            "location": "/console/ajustes/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Ajustes"
        },
        {
            "location": "/console/seguridad/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Seguridad"
        },
        {
            "location": "/console/monit/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Monitorizaci\u00f3n"
        },
        {
            "location": "/general/urls/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX URLs"
        },
        {
            "location": "/general/controladores/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Controladores"
        },
        {
            "location": "/general/vistas/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Vistas"
        },
        {
            "location": "/general/modelos/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Modelos"
        },
        {
            "location": "/general/enrutado/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Enrutado URI"
        },
        {
            "location": "/general/excepciones/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Gesti\u00f3n de Excepciones"
        },
        {
            "location": "/general/seguridad/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Seguridad"
        },
        {
            "location": "/reference/syntax/etiquetas-dbax/",
            "text": "Etiquetas de DBAX\n\n\n\nCuando DBAX analiza una vista, busca las etiquetas de apertura y cierre, que son \n?dbax\n y \n?\n, y que indican a DBAX d\u00f3nde empezar y finalizar la interpretaci\u00f3n del c\u00f3digo. Recordar que el c\u00f3digo interpretado es c\u00f3digo PL/SQL que se ejecuta din\u00e1micamente. Este mecanismo permite embeber c\u00f3digo PL/SQL en todo tipo de documentos, ya que todo lo que est\u00e9 fuera de las etiquetas de apertura y cierre de DBAX ser\u00e1 ignorado por el analizador.\n\n\nRecordar que las vistas de DBAX est\u00e1n pensadas para solo contener c\u00f3digo de presentaci\u00f3n y l\u00f3gica solo relacionada con \u00e9sta. \n\n\nRecuerde que siempre debe existir la etiqueta de cierre aunque \u00e9sta sea la ultima instrucci\u00f3n:\n\n\n?dabx\np('Hola mundo');\n\n/*... m\u00e1s c\u00f3digo*/\n\np('\u00daltima sentencia');\n\n?\n\n\n\n\n\nActualmente se est\u00e1 trabajando en un nuevo motor de plantillas, el cual ofrece mayor rendimento, una sintaxis m\u00e1s clara y es menos \nvervoso\n, adem\u00e1s la sintaxis actual ser\u00e1 compatible. Incluso si ya tienes conocimiento en Oracle PSP no tendr\u00e1s que aprender ninguna sintaxis nueva ya que ser\u00e1 compatible.\n\n\nPuedes ver la evoluci\u00f3n de este nuevo proyecto en GitHub: \ntePLSQL",
            "title": "Etiquetas de DBAX"
        },
        {
            "location": "/reference/syntax/salir-html/",
            "text": "Salir de HTML\n\n\n\nCualquier cosa fuera de un par de etiquetas de apertura y cierre es ignorado por el int\u00e9rprete de DBAX, lo que permite que las vistas tengan contenido mixto. Esto hace que DBAX pueda ser embebido en documentos HTML para, por ejemplo, crear plantillas.\n\n\np\nEsto va a ser ignorado por DBAX y mostrado por el navegador.\n/p\n\n\n?dbax p('Mientras que esto va a ser interpretado.'); ?\n\n\np\nEsto tambi\u00e9n ser\u00e1 ignorado por DBAX y mostrado por el navegador.\n/p\n\n\n\n\n\nEste ejemplo funciona como estaba previsto, porque cuando DBAX intercepta las etiquetas de cierre ?\n, simplemente comienza a imprimir cualquier cosa que encuentre (a excepci\u00f3n de un una nueva l\u00ednea inmediatamente despu\u00e9s; v\u00e9ase la separaci\u00f3n de instrucciones) hasta que d\u00e9 con otra etiqueta de apertura. \n\n\nPara imprimir c\u00f3digo HTML de forma condicional, actualmente DBAX no permite salir de HTML dentro de una estructura condicional, por tanto debemos hacerlo centro de sus etiquetas:\n\n\nEjemplo Salida  usando condiciones\n\n\n?dbax \n    if (expresi\u00f3n = true)\n    then\n        p('Esto se mostrar\u00e1 si la expresi\u00f3n es verdadera.');\n    else\n        p('En caso contrario se mostrar\u00e1 esto.');\n    end if;\n?\n\n\n\n\n\nRecuerde que para imprimir bloques de texto grandes, es m\u00e1s eficiente abandonar el modo int\u00e9rprete de DBAX que enviar todo el texto a trav\u00e9s de print.",
            "title": "Salir de HTML"
        },
        {
            "location": "/reference/syntax/salir-html/#ejemplo-salida-usando-condiciones",
            "text": "?dbax \n    if (expresi\u00f3n = true)\n    then\n        p('Esto se mostrar\u00e1 si la expresi\u00f3n es verdadera.');\n    else\n        p('En caso contrario se mostrar\u00e1 esto.');\n    end if;\n?   Recuerde que para imprimir bloques de texto grandes, es m\u00e1s eficiente abandonar el modo int\u00e9rprete de DBAX que enviar todo el texto a trav\u00e9s de print.",
            "title": "Ejemplo Salida  usando condiciones"
        },
        {
            "location": "/reference/syntax/separar-instrucciones/",
            "text": "Separaci\u00f3n de instrucciones\n\n\n\nComo el lenguaje entre las etiquetas de DABX es PL/SQL, se requiere que las instrucciones terminen en punto y coma al final de cada sentencia. La etiqueta de cierre de un bloque de c\u00f3digo de DBAX autom\u00e1ticamente implica un punto y coma. La etiqueta de cierre del bloque incluir\u00e1 la nueva l\u00ednea final inmediata si est\u00e1 presente.\n\n\n?dbax\np('Esto es una prueba');\n?\n\n\n\n?dbax p('Esto es otra prueba'); ?\n\n\n\n\n\nEste c\u00f3digo dar\u00e1 como resultado: \n\n\nEsto es una prueba\n\nEsto es otra prueba",
            "title": "Separaci\u00f3n de instrucciones"
        },
        {
            "location": "/reference/syntax/comentarios/",
            "text": "Comentarios\n\n\n\nDBAX admite comentarios al estilo de PL/SQL. Por ejemplo:\n\n\n?dbax\n    p('Esto es una prueba'); --Esto es un comentario al estilo de c++ de una sola l\u00ednea\n    /* Esto es un comentario multil\u00ednea\n       y otra l\u00edna de comentarios */\n    p('Esto es otra prueba');\n    p('Una prueba final'); /*Esto es un comentario de una sola l\u00ednea*/\n?\n\n\n\n\n\nLos comentarios al estilo de \nuna sola l\u00ednea\n solo comentan hasta el final de la l\u00ednea o del bloque actual de c\u00f3digo PL/SQL, lo primero que suceda. Esto implica que el c\u00f3digo HTML despu\u00e9s de \n-- ... ?\n SER\u00c1 impreso: \n?\n sale del modo DBAX y vuelve al modo HTML, por lo que \n--\n no pueden influir en eso. \n\n\n    \nh1\nEsto es un \n?dabx --p('simple');?\n ejemplo\n/h1\n\n    \np\nEl encabezado anterior dir\u00e1 'Esto es un  ejemplo'.\n/p\n\n\n\n\n\nLos comentarios al estilo de \nC\n finalizan con el primer */ que se encuentre. Aseg\u00farese de no anidar comentarios al estilo de \nC\n. Es muy f\u00e1cil cometer este error cuando se intenta comentar un bloque grande de c\u00f3digo.\n\n\n?dbax\n /*\n    echo 'Esto es una prueba'; /* Este comentario causar\u00e1 un problema*/\n */\n?",
            "title": "Comentarios"
        },
        {
            "location": "/reference/variables/basico/",
            "text": "Conceptos B\u00e1sicos\n\n\n\nEn DBAX las variables tienen la misma sintaxis y criterios que en PL/SQL, puede leer la \ndocumentaci\u00f3n de Oracle\n para mas informaci\u00f3n. El nombre de la variable \nNO\n es sensible a min\u00fasculas y may\u00fasculas.\n\n\nLos nombres de variables siguen las mismas reglas PL/SQL.Un nombre de variable v\u00e1lido tiene que empezar con una letra, seguido de cualquier n\u00famero de letras, n\u00fameros y caracteres de subrayado. Adem\u00e1s el nombre de una variable como m\u00e1ximo puede ser de 30 caracteres.\n\n\n\n\nNote\n\n\nNota: Para los prop\u00f3sitos de este manual, una letra es a-z, A-Z, y los bytes del 127 al 255 (0x7f-0xff).\n\n\n\n\n\n\nTip\n\n\nPara m\u00e1s informaci\u00f3n sobre convenci\u00f3n de nombres en Oracle vea \nDatabase Object Names and Qualifiers\n\n\n\n\n?dbax\n  DECLARE\n    var1 VARCAHR2(20)  := 'Roberto';\n    var2 VARCAHR2(20)  := 'Juan';\n    --\n    4site VARCAHR2(20) := 'aun no';   /* inv\u00e1lido; comienza con un n\u00famero*/\n    _4site VARCAHR2(20) := 'aun no';  /* inv\u00e1lido; comienza con un car\u00e1cter de subrayado*/\n    site4$ VARCAHR2(20) := 'ahora si'; /* v\u00e1lido; comienza por una letra*/\n\n    t\u00e4yte VARCAHR2(20) := 'mansikka'; /* v\u00e1lido; '\u00e4' es ASCII (Extendido) 228*/\n  BEGIN\n    p(var1 || ' , '|| var2);  /*imprime \nRoberto, Juan\n*/\n  END;\n?\n\n\n\n\n\nDe forma predeterminada, las variables siempre se asignan por valor. Esto significa que cuando se asigna una expresi\u00f3n a una variable, el valor completo de la expresi\u00f3n original se copia en la variable de destino. Esto quiere decir que, por ejemplo, despu\u00e9s de asignar el valor de una variable a otra, los cambios que se efect\u00faen a una de esas variables no afectar\u00e1 a la otra. \n\n\nNo es necesario inicializar variables en PL/SQL, sin embargo, es una muy buena pr\u00e1ctica. Las variables no inicializadas tienen un valor predeterminado de acuerdo a su tipo dependiendo del contexto en el que son usadas - las booleanas se asumen como FALSE, los enteros y flotantes se establecen vac\u00edos, las cadenas o strings se establecen como una cadena vac\u00eda y los arrays se convierten en un array vac\u00edo.\n\n\nEjemplo Valores predeterminados en variables sin inicializar\n\n\n?dbax\n/* Una variable no definida (sin contexto de uso); dar\u00e1 un error en tiempo de ejecuci\u00f3n */\np(variable_indefinida);\n\n/* Uso booleano; imprime 'false'*/\nDECLARE\n  booleano BOOLEAN;\nBEGIN\n  IF booleano THEN\n    p('true');\n  ELSE\n    p('false');\n  END IF;\nEND;\n\n/* Uso de una cadena; imprime 'string(3) \nabc\n' */\nDECLARE\n  cadena_indefinida VARCHAR2(10);\nBEGIN\n  cadena_indefinida := 'abc';\n  p(cadena_indefinida);\nEND;\n\n/* Uso de un entero; imprime null */\nDECLARE\n  int_indefinido number(10);\nBEGIN\n  int_indefinido := int_indefinido + 25;\n  p(int_indefinido);\nEND;\n\n/*En cambio si lo inicializamos, nos imprimir\u00e1 25*/\nDECLARE\n  int_indefinido number(10):= 0;\nBEGIN\n  int_indefinido := int_indefinido + 25;\n  p(int_indefinido);\nEND;\n\n?\n\n\n\n\n\nDepender del valor predeterminado de una variable sin inicializar es problem\u00e1tico ya que podemos obtener resultados no deseados.",
            "title": "Conceptos b\u00e1sicos"
        },
        {
            "location": "/reference/variables/basico/#ejemplo-valores-predeterminados-en-variables-sin-inicializar",
            "text": "?dbax\n/* Una variable no definida (sin contexto de uso); dar\u00e1 un error en tiempo de ejecuci\u00f3n */\np(variable_indefinida);\n\n/* Uso booleano; imprime 'false'*/\nDECLARE\n  booleano BOOLEAN;\nBEGIN\n  IF booleano THEN\n    p('true');\n  ELSE\n    p('false');\n  END IF;\nEND;\n\n/* Uso de una cadena; imprime 'string(3)  abc ' */\nDECLARE\n  cadena_indefinida VARCHAR2(10);\nBEGIN\n  cadena_indefinida := 'abc';\n  p(cadena_indefinida);\nEND;\n\n/* Uso de un entero; imprime null */\nDECLARE\n  int_indefinido number(10);\nBEGIN\n  int_indefinido := int_indefinido + 25;\n  p(int_indefinido);\nEND;\n\n/*En cambio si lo inicializamos, nos imprimir\u00e1 25*/\nDECLARE\n  int_indefinido number(10):= 0;\nBEGIN\n  int_indefinido := int_indefinido + 25;\n  p(int_indefinido);\nEND;\n\n?   Depender del valor predeterminado de una variable sin inicializar es problem\u00e1tico ya que podemos obtener resultados no deseados.",
            "title": "Ejemplo Valores predeterminados en variables sin inicializar"
        },
        {
            "location": "/reference/variables/predefinidas/",
            "text": "Variables Predefinidas\n\n\n\nDABX proporciona una gran cantidad de variables predefinidas dentro del contexto de ejecuci\u00f3n. Muchas de \u00e9stas, sin embargo, no pueden ser completamente documentadas ya que dependen del servidor que est\u00e9 corriendo, la versi\u00f3n y configuraci\u00f3n de dicho servidor, y otros factores. Algunas de estas variables no estar\u00e1n disponibles cuando se ejecute DBAX fuera de su contexto. \n\n\nDBAX ofrece un conjunto de arrays predefinidas que contienen variables del servidor web, el entorno y entradas del usuario. Estos arrays son un poco especiales porque son autom\u00e1ticamente globales. Por esta raz\u00f3n, son conocidas a menudo como \nsuperglobales\n. Las superglobales se mencionan m\u00e1s abajo; sin embargo para una lista de sus contenidos y m\u00e1s informaci\u00f3n sobre variables predefinidas en DBAX, por favor consulte la secci\u00f3n Variables predefinidas reservadas.",
            "title": "Variables Predefinidas"
        },
        {
            "location": "/reference/variables/ambito/",
            "text": "Ambito Variables\n\n\n\nEl \u00e1mbito de una variable es el contexto dentro del que la variable est\u00e1 definida. La mayor parte de las variables DBAX s\u00f3lo tienen un \u00e1mbito simple. \n\n\n?dbax\nDECLARE\n    a varchar2(2) := 'a';\nBEGIN\n    p(a);\nEND;\n?\n\n\n\n\n\nLa variable \na\n solo se podr\u00e1 usar en este bloque DBAX.\n\n\nSi concatenamos varias instrucciones DBAX, las variables seguir\u00e1n teniendo un \u00e1mbito simple, o local.\n\n\n?dbax\nDECLARE\n    a varchar2(2) := 'a';\nBEGIN\n    p(a);\nEND; ?\n\n\n\n?dbax\nDECLARE\n    a varchar2(2) := 'b';\nBEGIN\n    p(a);\nEND;\n?\n\n\n\n\n\nEste c\u00f3digo es correcto, e imprimir\u00e1 \nab\n por pantalla. \n\n\nen cambio si lo que queremos es compartir una variable a lo largo de toda una vista de DBAX y en todas sus instrucciones, debemos usar el array global \ndbax_core.g$view\n\n\n?dbax\n    dbax_core.g$view('user_name') := 'Oscar'; \n?\n\n\n... some HTML code ...\n\n\np\nHello \n?dbax p(dbax_core.g$view('a')); ?\n \n/p\n\n\n\n\n\n\nEl uso de las variables \ndbax_core.g$view\n es muy util para obtener un contexto global en todas las vistas incluidas. \n\n\n......",
            "title": "\u00c1mbito de las variables"
        },
        {
            "location": "/reference/variables/externas/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "Variables desde fuentes externas"
        },
        {
            "location": "/reference/reserved/dbax_core/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "dbax_core"
        },
        {
            "location": "/reference/reserved/dbax_cookie/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "dbax_cookie"
        },
        {
            "location": "/reference/reserved/dbax_exception/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "dbax_exception"
        },
        {
            "location": "/reference/reserved/dbax_session/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "dbax_session"
        },
        {
            "location": "/api/dbax_cookie/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_COOKIE"
        },
        {
            "location": "/api/dbax_core/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_CORE"
        },
        {
            "location": "/api/dbax_datatable/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_DATATABLE"
        },
        {
            "location": "/api/dbax_document/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_DOCUMENT"
        },
        {
            "location": "/api/dbax_exception/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_EXCEPTION"
        },
        {
            "location": "/api/dbax_file_parser/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_FILE_PARSER"
        },
        {
            "location": "/api/dbax_ldap/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_LDAP"
        },
        {
            "location": "/api/dbax_log/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_LOG"
        },
        {
            "location": "/api/dbax_security/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_SECURITY"
        },
        {
            "location": "/api/dbax_session/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_SESSION"
        },
        {
            "location": "/api/dbax_utils/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "DBAX_UTILS"
        },
        {
            "location": "/api/json_util/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "JSON_UTIL"
        },
        {
            "location": "/api/xlsx_builder/",
            "text": "Titulo principal\n\n\n\nVac\u00eda",
            "title": "XLSX_BUILDER"
        }
    ]
}